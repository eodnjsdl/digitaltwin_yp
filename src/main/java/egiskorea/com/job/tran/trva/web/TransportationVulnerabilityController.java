package egiskorea.com.job.tran.trva.web;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.stereotype.Repository;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import egiskorea.com.job.tran.trva.service.TransportationVulnerabilityService;
import egiskorea.com.job.tran.trva.service.TransportationVulnerabilityVO;
import egovframework.rte.fdl.property.EgovPropertyService;

/**
 * @Description 교통분석 대중교통 취약지역  controller 클래스
 * @author 플랫폼개발부문 DT플랫폼 
 * @since 2023.05.17
 * @version 1.0
 * @see
 *
 * <pre>
 * << 개정이력(Modification Information) >>
 *
 *  수정일               수정자            수정내용
 *  ----------   --------   ---------------------------
 *  2023.05.17   황의현           최초 생성
 *  </pre>
 */

@Controller
@RequestMapping("/job/tran/trva")
public class TransportationVulnerabilityController {
	
	@Resource(name = "transportationVulnerabilityService")
	private TransportationVulnerabilityService transportationVulnerabilityService;
	
	@Resource(name = "propertiesService")
    protected EgovPropertyService propertyService;

	private static final Logger logger = LoggerFactory.getLogger(TransportationVulnerabilityController.class);
	
	/**
	 * 목록 화면 조회
	 * 
	 * @param 
	 * @param model
	 * @return "egiskorea/com/job/tran/trva/selectTransportationVulnerabilityListView"
	 * @throws Exception
	 */
	@RequestMapping(value = "/selectTransportationVulnerabilityListView.do")
	public String selectTransportationVulnerabilityListView(ModelMap model) throws Exception{
		return "egiskorea/com/job/tran/trva/selectTransportationVulnerabilityList";
	}
	
	/**
	 * 기준연월 목록 조회
	 * 
	 * @param 
	 * @param model
	 * @return "egiskorea/com/job/tran/trva/getTransVulnerBaseYMList"
	 * @throws Exception
	 */
	@RequestMapping(value = "/getTransVulnerBaseYMList.do", method = RequestMethod.POST)
	public ModelAndView getTransVulnerBaseYMList(
			@ModelAttribute("searchVO") TransportationVulnerabilityVO searchVO,
			ModelMap model) throws Exception{
		
		ModelAndView mav = new ModelAndView("jsonView");
		
		List<Map<String, Object>> baseYmList 	= transportationVulnerabilityService.getTransVulnerBaseYMList(searchVO);
		mav.addObject("baseYmList", 	baseYmList);
		
		return mav;
	}
	/**
	 * 분석 데이터 목록 조회
	 * 
	 * @param 
	 * @param model
	 * @return "egiskorea/com/job/tran/trva/selectTransportationVulnerabilityList"
	 * @throws Exception
	 */
	@RequestMapping(value = "/selectTransportationVulnerabilityList.do", method = RequestMethod.POST)
	public ModelAndView selectTransportationVulnerabilityList(
			@ModelAttribute("searchVO") TransportationVulnerabilityVO searchVO,
			ModelMap model) throws Exception{
		
		ModelAndView mav = new ModelAndView("jsonView");

		//취약분석 목록 조회 - 취합(읍면동기준, 리기준)
		List<TransportationVulnerabilityVO> resultListEmd = null;
		List<TransportationVulnerabilityVO> resultListLi = null;
		String resultType = null;
		if( searchVO.getSearchArea().isEmpty() ) {
			resultListEmd  = transportationVulnerabilityService.selectTransportationVulnerabilityListEmd(searchVO);
			resultType = "emd";
		}else {
			resultListLi   = transportationVulnerabilityService.selectTransportationVulnerabilityListLi(searchVO);
			resultType = "li";
		}
		
		//Map<String, Object> geomCenterPos = transportationVulnerabilityService.getTransVulnerGeomCenterPos(searchVO);
		
		//취약분석 목록 조회 - grid 
		List<Map<String, Object>> resultRangeList = transportationVulnerabilityService.selectTransportationVulnerabilityList(searchVO);
		
		//mav.addObject("resultListAllGrid", 	resultListAllGrid);
		
		mav.addObject("resultType", 	resultType);
		mav.addObject("resultListEmd", 	resultListEmd);
		mav.addObject("resultListLi", 	resultListLi);
		
		//mav.addObject("geomCenterPos", 	geomCenterPos);
		mav.addObject("resultRangeList", resultRangeList);
		
		return mav;
	}
	
}
