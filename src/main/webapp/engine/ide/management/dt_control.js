var Control = {
	Load : {
		m_jiga_Poi:null,
		m_jiga_Polygon:null,
		m_center_Bill:null,
		m_center_Polygon:null,
		m_center_Line:null,
		m_rect_Bill:null,
		m_rect_Polygon:null,
		m_rect_Line:null,
		m_centerKey:null,
		m_area_Polygon:null,
		m_minheight:0,
		m_maxheight:0,
		m_centerheight:0,
		m_webWorker:null,
		m_checkViewInfo:false,
		m_checkMode:0,
		m_viewInfoLon:0,
		m_viewInfoLat:0,
		m_viewInfoAlt:0,
		m_checkList : {},
		m_jsonCount : 0,
		m_build_count_poi:null,
		m_build_count_polygon:null,
		m_build_count_bar:null,
		m_corona_eup:null,
		m_corona_poi:null,
		m_corona_bar:null,
		spaceAnalysisCnt:0,
		loadJSON : function()
		{
			//5186
			var data = [
				{ "PNU": "4183025021102810001",	"JIBUN": "281-1대",	"PY_JIGA_1": 770800.0,	"CALC_JIG_1": 921200.0,		"VRFY_JIG_1": 921200.0,		"READ_JIG_1": 921200.0,		"PY2_JIGA_1": 742600.0,		"PY3_JIGA_1": 741600.0,		"PY4_JIGA_1": 718100.0,		"coordinates": [ 243434.892925247724634, 543359.679550807923079, 243426.920404514006805, 543350.550259028794244, 243433.136579055018956, 543345.658581463154405, 243418.118485933955526, 543328.372032539686188, 243414.845610979653429, 543326.194900344242342, 243404.288327252987074, 543334.224354934645817, 243402.552267746126745, 543335.826263023307547, 243427.998717042035423, 543365.425190664129332, 243434.892925247724634, 543359.679550807923079 ] },
				{ "PNU": "4183025021102820002",	"JIBUN": "282-2대",	"PY_JIGA_1": 820000.0,	"CALC_JIG_1": 980000.0,		"VRFY_JIG_1": 980000.0,		"READ_JIG_1": 980000.0,		"PY2_JIGA_1": 790000.0,		"PY3_JIGA_1": 789000.0,		"PY4_JIGA_1": 764000.0,		"coordinates": [ 243397.914826153108152, 543390.110622191103175, 243402.541950624348829, 543386.588861261494458, 243396.829292012233054, 543380.091651841299608, 243397.846642825083109, 543372.231760419323109, 243403.415986036707181, 543363.756081660976633, 243398.075244990264764, 543359.000875449040905, 243386.432870308926795, 543369.209263278404251, 243393.638374018308241, 543378.843516045133583, 243390.769253376696724, 543381.979360279510729, 243397.914826153108152, 543390.110622191103175 ] },
				{ "PNU": "4183025021102720001",	"JIBUN": "272-1대",	"PY_JIGA_1": 844600.0,	"CALC_JIG_1": 1009000.0,	"VRFY_JIG_1": 1009000.0,	"READ_JIG_1": 1009000.0,	"PY2_JIGA_1": 813700.0,		"PY3_JIGA_1": 812600.0,		"PY4_JIGA_1": 786900.0,		"coordinates": [ 243396.152922271605348, 543322.58707555080764, 243396.359909146849532, 543322.839083008584566, 243404.288327252987074, 543334.224354934645817, 243414.845610979653429, 543326.194900344242342, 243405.009237693739124, 543314.15554648602847, 243396.152922271605348, 543322.58707555080764 ] },
				{ "PNU": "4183025021102800001",	"JIBUN": "280-1대",	"PY_JIGA_1": 844600.0,	"CALC_JIG_1": 1009000.0,	"VRFY_JIG_1": 1009000.0,	"READ_JIG_1": 1009000.0,	"PY2_JIGA_1": 813700.0,		"PY3_JIGA_1": 812600.0,		"PY4_JIGA_1": 786900.0,		"coordinates": [ 243404.288327252987074, 543334.224354934645817, 243396.359909146849532, 543322.839083008584566, 243396.152922271605348, 543322.58707555080764, 243394.43403162190225, 543320.487013686215505, 243391.132926777878311, 543323.350840352941304, 243392.261864973406773, 543324.510882716509514, 243401.936246652243426, 543336.394230410340242, 243402.552267746126745, 543335.826263023307547, 243404.288327252987074, 543334.224354934645817 ] },
				{ "PNU": "4183025021102820005",	"JIBUN": "282-5대",	"PY_JIGA_1": 806600.0,	"CALC_JIG_1": 936400.0,		"VRFY_JIG_1": 936400.0,		"READ_JIG_1": 936400.0,		"PY2_JIGA_1": 773200.0,		"PY3_JIGA_1": 771800.0,		"PY4_JIGA_1": 747300.0,		"coordinates": [ 243433.136579055018956, 543345.658581463154405, 243426.920404514006805, 543350.550259028794244, 243434.892925247724634, 543359.679550807923079, 243443.83919696637895, 543352.190018408000469, 243442.380286474130116, 543350.47996532660909, 243439.551347646687645, 543349.625842937501147, 243435.350641249038745, 543343.915696314186789, 243433.136579055018956, 543345.658581463154405 ] },
				{ "PNU": "4183025021102700003",	"JIBUN": "270-3대",	"PY_JIGA_1": 1583000.0,	"CALC_JIG_1": 1622000.0,	"VRFY_JIG_1": 0.0,			"READ_JIG_1": 1622000.0,	"PY2_JIGA_1": 1544000.0,	"PY3_JIGA_1": 1536000.0,	"PY4_JIGA_1": 1489000.0,	"coordinates": [ 243450.877635716024088, 543319.462598414858803, 243450.017689297819743, 543318.436567267868668, 243437.510274835280143, 543329.664907549624331, 243431.063172213471262, 543333.020586717058904, 243424.321248978289077, 543332.497283085016534, 243418.118485933955526, 543328.372032539686188, 243433.136579055018956, 543345.658581463154405, 243435.350641249038745, 543343.915696314186789, 243435.207929585041711, 543337.623739535338245, 243447.454159806482494, 543330.476355072692968, 243443.856400793854846, 543325.815227680839598, 243450.877635716024088, 543319.462598414858803 ] },
				{ "PNU": "4183025021102710001",	"JIBUN": "271-1대",	"PY_JIGA_1": 1583000.0,	"CALC_JIG_1": 1622000.0,	"VRFY_JIG_1": 0.0,			"READ_JIG_1": 1622000.0,	"PY2_JIGA_1": 1544000.0,	"PY3_JIGA_1": 1536000.0,	"PY4_JIGA_1": 1489000.0,	"coordinates": [ 243450.017689297819743, 543318.436567267868668, 243442.932134524540743, 543309.900311287958175, 243414.845610979653429, 543326.194900344242342, 243418.118485933955526, 543328.372032539686188, 243424.321248978289077, 543332.497283085016534, 243431.063172213471262, 543333.020586717058904, 243437.510274835280143, 543329.664907549624331, 243450.017689297819743, 543318.436567267868668 ] },
				{ "PNU": "4183025021102690020",	"JIBUN": "269-20대",	"PY_JIGA_1": 760000.0,	"CALC_JIG_1": 0.0,			"VRFY_JIG_1": 0.0,			"READ_JIG_1": 0.0,			"PY2_JIGA_1": 720000.0,		"PY3_JIGA_1": 718000.0,		"PY4_JIGA_1": 695000.0,		"coordinates": [ 243421.627144020982087, 543269.538657765486278, 243401.333801820437657, 543280.521644569816999, 243408.294162987644086, 543293.320861134445295, 243428.698361303395359, 543285.470854626153596, 243429.334430399991106, 543283.847896491992287, 243421.627144020982087, 543269.538657765486278 ] },
				{ "PNU": "4183025021102690012",	"JIBUN": "269-12대",	"PY_JIGA_1": 227400.0,	"CALC_JIG_1": 236200.0,		"VRFY_JIG_1": 0.0,			"READ_JIG_1": 236200.0,		"PY2_JIGA_1": 218300.0,		"PY3_JIGA_1": 217600.0,		"PY4_JIGA_1": 210600.0,		"coordinates": [ 243466.655018643883523, 543286.456579543300904, 243458.674843462620629, 543291.665174078778364, 243443.721400072798133, 543303.947394375456497, 243434.279951337899547, 543293.493046011892147, 243431.352185919415206, 543288.856949006556533, 243428.698361303395359, 543285.470854626153596, 243408.294162987644086, 543293.320861134445295, 243404.229123477591202, 543294.88466320571024, 243381.545500457548769, 543312.430489015998319, 243383.89430095005082, 543316.397564876941033, 243387.248488356970483, 543311.715755006065592, 243400.250817267457023, 543302.276423169649206, 243403.592901788011659, 543299.850594909978099, 243405.321854583540699, 543300.587668009568006, 243428.392144502460724, 543290.272802690276876, 243438.503412885882426, 543304.563151306239888, 243442.932134524540743, 543309.900311287958175, 243450.017689297819743, 543318.436567267868668, 243450.877635716024088, 543319.462598414858803, 243457.947195398621261, 543327.893854493275285, 243461.553264753572876, 543325.755036018206738, 243453.908691365766572, 543317.722750535816886, 243446.386212601501029, 543307.596487178117968, 243451.161377271462698, 543303.168740162858739, 243460.495699585881084, 543294.504234761465341, 243467.815845794335473, 543290.043604182312265, 243466.655018643883523, 543286.456579543300904 ] },
				{ "PNU": "4183025021102690019",	"JIBUN": "269-19대",	"PY_JIGA_1": 921100.0,	"CALC_JIG_1": 969600.0,		"VRFY_JIG_1": 0.0,			"READ_JIG_1": 969600.0,		"PY2_JIGA_1": 872600.0,		"PY3_JIGA_1": 870200.0,		"PY4_JIGA_1": 842300.0,		"coordinates": [ 243429.334430399991106, 543283.847896491992287, 243442.170632622059202, 543277.212534907739609, 243444.692702949221712, 543275.238665639888495, 243442.400069172435906, 543267.609621283248998, 243445.459171299327863, 543264.846782768378034, 243451.662302768614609, 543260.90109712514095, 243449.842407695250586, 543258.915029747178778, 243440.031218304706272, 543264.749535751179792, 243433.857653408835176, 543256.278320891782641, 243422.270151668228209, 543269.260689313756302, 243421.993173150316579, 543268.837680012802593, 243421.627144020982087, 543269.538657765486278, 243429.334430399991106, 543283.847896491992287 ] },
				{ "PNU": "4183025021102740003",	"JIBUN": "274-3대",	"PY_JIGA_1": 2131000.0,	"CALC_JIG_1": 2184000.0,	"VRFY_JIG_1": 0.0,			"READ_JIG_1": 2184000.0,	"PY2_JIGA_1": 2079000.0,	"PY3_JIGA_1": 2068000.0,	"PY4_JIGA_1": 2005000.0,	"coordinates": [ 243400.029658062092494, 543240.080904699629173, 243421.876200153899845, 543224.45202550617978, 243413.333643743098946, 543216.201700756093487, 243403.911527488467982, 543220.367237722384743, 243392.467370902129915, 543225.763672654749826, 243387.22025859716814, 543229.125406560488045, 243384.875167898688233, 543231.515280617633834, 243395.869556989695411, 543243.009691644809209, 243397.173387866903795, 543246.490723648457788, 243394.462329800764564, 543248.228586155804805, 243399.566672480490524, 543261.75171227089595, 243406.909801024536137, 543257.674079709104262, 243405.649918816750869, 543255.310040883952752, 243398.224613288097316, 543241.37181209679693, 243400.029658062092494, 543240.080904699629173 ] },
				{ "PNU": "4183025021102740005",	"JIBUN": "274-5대",	"PY_JIGA_1": 1580000.0,	"CALC_JIG_1": 1590000.0,	"VRFY_JIG_1": 0.0,			"READ_JIG_1": 1590000.0,	"PY2_JIGA_1": 1540000.0,	"PY3_JIGA_1": 1530000.0,	"PY4_JIGA_1": 1480000.0,	"coordinates": [ 243393.24548651126679, 543245.004556090570986, 243382.902074828685727, 543233.893171753152274, 243382.592079497786472, 543233.844157990417443, 243376.303851429111091, 543239.920822907472029, 243372.031676427781349, 543244.488591779838316, 243365.893356394197326, 543252.554247819818556, 243368.065254499961156, 543254.413332269177772, 243366.443203589966288, 543255.807247206335887, 243378.677559353760444, 543267.818710746942088, 243392.821128500974737, 543252.920474147540517, 243390.629400127305416, 543247.346418158034794, 243393.24548651126679, 543245.004556090570986 ] },
				{ "PNU": "4183025021102720002",	"JIBUN": "272-2대",	"PY_JIGA_1": 793700.0,	"CALC_JIG_1": 948600.0,		"VRFY_JIG_1": 948600.0,		"READ_JIG_1": 948600.0,		"PY2_JIGA_1": 764700.0,		"PY3_JIGA_1": 763700.0,		"PY4_JIGA_1": 739500.0,		"coordinates": [ 243400.250817267457023, 543302.276423169649206, 243404.944350815436337, 543311.688563026254997, 243394.43403162190225, 543320.487013686215505, 243396.152922271605348, 543322.58707555080764, 243405.009237693739124, 543314.15554648602847, 243414.845610979653429, 543326.194900344242342, 243442.932134524540743, 543309.900311287958175, 243438.503412885882426, 543304.563151306239888, 243428.392144502460724, 543290.272802690276876, 243405.321854583540699, 543300.587668009568006, 243403.592901788011659, 543299.850594909978099, 243400.250817267457023, 543302.276423169649206 ] },
				{ "PNU": "4183025021102690021",	"JIBUN": "269-21대",	"PY_JIGA_1": 844600.0,	"CALC_JIG_1": 1009000.0,	"VRFY_JIG_1": 1009000.0,	"READ_JIG_1": 1009000.0,	"PY2_JIGA_1": 813700.0,		"PY3_JIGA_1": 812600.0,		"PY4_JIGA_1": 786900.0,		"coordinates": [ 243381.545500457548769, 543312.430489015998319, 243404.229123477591202, 543294.88466320571024, 243391.584308251214679, 543271.102273970609531, 243386.529145914391847, 543275.527008230099455, 243383.494048399792518, 543278.184848673990928, 243372.224739309109282, 543286.892265408765525, 243369.517486803175416, 543292.889094421640038, 243381.545500457548769, 543312.430489015998319 ] },
				{ "PNU": "4183025021102740001",	"JIBUN": "274-1대",	"PY_JIGA_1": 962600.0,	"CALC_JIG_1": 1150000.0,	"VRFY_JIG_1": 1150000.0,	"READ_JIG_1": 1150000.0,	"PY2_JIGA_1": 927400.0,		"PY3_JIGA_1": 926200.0,		"PY4_JIGA_1": 896900.0,		"coordinates": [ 243372.224739309109282, 543286.892265408765525, 243383.494048399792518, 543278.184848673990928, 243386.529145914391847, 543275.527008230099455, 243378.677559353760444, 543267.818710746942088, 243366.443203589966288, 543255.807247206335887, 243364.940167818131158, 543256.849170357570983, 243359.899446249590255, 543273.522808454697952, 243372.224739309109282, 543286.892265408765525 ] },
				{ "PNU": "4183025021102810002",	"JIBUN": "281-2대",	"PY_JIGA_1": 770800.0,	"CALC_JIG_1": 921200.0,		"VRFY_JIG_1": 921200.0,		"READ_JIG_1": 921200.0,		"PY2_JIGA_1": 742600.0,		"PY3_JIGA_1": 741600.0,		"PY4_JIGA_1": 718100.0,		"coordinates": [ 243407.357591577630956, 543349.81337181373965, 243407.217537760763662, 543351.016355910920538, 243405.358478170004673, 543352.641258200863376, 243412.837286619556835, 543355.552576591377147, 243407.357591577630956, 543349.81337181373965 ] },
				{ "PNU": "4183025021102810000",	"JIBUN": "281대",	"PY_JIGA_1": 706800.0,	"CALC_JIG_1": 844700.0,		"VRFY_JIG_1": 844700.0,		"READ_JIG_1": 844700.0,		"PY2_JIGA_1": 680900.0,		"PY3_JIGA_1": 680100.0,		"PY4_JIGA_1": 658500.0,		"coordinates": [ 243421.376804823754355, 543364.63989458407741, 243422.208761508663883, 543365.445926190936007, 243422.057588911993662, 543369.252889194642194, 243414.061346901027719, 543375.928471394698136, 243414.62531303340802, 543376.573492041323334, 243427.998717042035423, 543365.425190664129332, 243402.552267746126745, 543335.826263023307547, 243401.936246652243426, 543336.394230410340242, 243399.761172147816978, 543338.400115263997577, 243407.743740737438202, 543346.479415797279216, 243407.357591577630956, 543349.81337181373965, 243412.837286619556835, 543355.552576591377147, 243418.074152463348582, 543357.591799534857273, 243423.237906400318025, 543362.094999661436304, 243421.376804823754355, 543364.63989458407741 ] },
				{ "PNU": "4183025021102760001",	"JIBUN": "276-1제",	"PY_JIGA_1": 145800.0,	"CALC_JIG_1": 161300.0,		"VRFY_JIG_1": 0.0,			"READ_JIG_1": 161300.0,		"PY2_JIGA_1": 140900.0,		"PY3_JIGA_1": 140100.0,		"PY4_JIGA_1": 135500.0,		"coordinates": [ 243334.11599862028379, 543265.851692110882141, 243327.345823274139548, 543270.856343498802744, 243317.928990883781807, 543290.709756693686359, 243321.955964175926056, 543290.602941361255944, 243320.049716390523827, 543296.35880884330254, 243322.944234339374816, 543306.421861423063092, 243336.296886453812476, 543289.841602026601322, 243347.274419716850389, 543276.273210393730551, 243344.221595985407475, 543272.936097417259589, 243334.11599862028379, 543265.851692110882141 ] },
				{ "PNU": "4183025021102690026",	"JIBUN": "269-26제",	"PY_JIGA_1": 213800.0,	"CALC_JIG_1": 227700.0,		"VRFY_JIG_1": 0.0,			"READ_JIG_1": 227700.0,		"PY2_JIGA_1": 204900.0,		"PY3_JIGA_1": 204000.0,		"PY4_JIGA_1": 197500.0,		"coordinates": [ 243364.335642284393543, 543224.65139726921916, 243354.454862556332955, 543243.430797784239985, 243334.11599862028379, 543265.851692110882141, 243344.221595985407475, 543272.936097417259589, 243347.274419716850389, 543276.273210393730551, 243350.898588705982547, 543271.948410021956079, 243365.893356394197326, 543252.554247819818556, 243372.031676427781349, 543244.488591779838316, 243380.397112599399406, 543233.496060542180203, 243387.22025859716814, 543229.125406560488045, 243392.467370902129915, 543225.763672654749826, 243403.911527488467982, 543220.367237722384743, 243413.333643743098946, 543216.201700756093487, 243416.440682142652804, 543214.82685345702339, 243412.888906552514527, 543210.520725358277559, 243404.272569707623916, 543219.380262005026452, 243393.218586621020222, 543220.908745323889889, 243392.828587216994492, 543220.96272709290497, 243373.916597165109124, 543223.993839822942391, 243364.335642284393543, 543224.65139726921916 ] },
				{ "PNU": "4183025021102740004",	"JIBUN": "274-4대",	"PY_JIGA_1": 1290000.0,	"CALC_JIG_1": 1299000.0,	"VRFY_JIG_1": 0.0,			"READ_JIG_1": 1299000.0,	"PY2_JIGA_1": 1258000.0,	"PY3_JIGA_1": 1250000.0,	"PY4_JIGA_1": 1209000.0,	"coordinates": [ 243378.677559353760444, 543267.818710746942088, 243386.529145914391847, 543275.527008230099455, 243391.584308251214679, 543271.102273970609531, 243397.930643906933255, 543262.658630418474786, 243399.566672480490524, 543261.75171227089595, 243394.462329800764564, 543248.228586155804805, 243393.24548651126679, 543245.004556090570986, 243390.629400127305416, 543247.346418158034794, 243392.821128500974737, 543252.920474147540517, 243378.677559353760444, 543267.818710746942088 ] },
				{ "PNU": "4183025021102750000",	"JIBUN": "275전",	"PY_JIGA_1": 933100.0,	"CALC_JIG_1": 1115000.0,	"VRFY_JIG_1": 1115000.0,	"READ_JIG_1": 1115000.0,	"PY2_JIGA_1": 899000.0,		"PY3_JIGA_1": 897800.0,		"PY4_JIGA_1": 869400.0,		"coordinates": [ 243359.899446249590255, 543273.522808454697952, 243364.940167818131158, 543256.849170357570983, 243366.443203589966288, 543255.807247206335887, 243368.065254499961156, 543254.413332269177772, 243365.893356394197326, 543252.554247819818556, 243350.898588705982547, 543271.948410021956079, 243347.274419716850389, 543276.273210393730551, 243351.119197699852521, 543280.476352679659612, 243359.899446249590255, 543273.522808454697952 ] },
				{ "PNU": "4183025021102800000",	"JIBUN": "280대",	"PY_JIGA_1": 1267000.0,	"CALC_JIG_1": 1276000.0,	"VRFY_JIG_1": 0.0,			"READ_JIG_1": 1276000.0,	"PY2_JIGA_1": 1235000.0,	"PY3_JIGA_1": 1277000.0,	"PY4_JIGA_1": 1235000.0,	"coordinates": [ 243316.950542500067968, 543344.515286674490198, 243322.980219582270365, 543350.553514186642133, 243333.216720275871921, 543359.732908906415105, 243351.994804349145852, 543376.571632993291132, 243360.250000908272341, 543370.847055093036033, 243379.266318695183145, 543404.431657675653696, 243397.914826153108152, 543390.110622191103175, 243390.769253376696724, 543381.979360279510729, 243393.638374018308241, 543378.843516045133583, 243386.432870308926795, 543369.209263278404251, 243398.075244990264764, 543359.000875449040905, 243405.358478170004673, 543352.641258200863376, 243407.217537760763662, 543351.016355910920538, 243407.357591577630956, 543349.81337181373965, 243407.743740737438202, 543346.479415797279216, 243399.761172147816978, 543338.400115263997577, 243401.936246652243426, 543336.394230410340242, 243392.261864973406773, 543324.510882716509514, 243391.132926777878311, 543323.350840352941304, 243394.43403162190225, 543320.487013686215505, 243404.944350815436337, 543311.688563026254997, 243400.250817267457023, 543302.276423169649206, 243387.248488356970483, 543311.715755006065592, 243383.89430095005082, 543316.397564876941033, 243381.545500457548769, 543312.430489015998319, 243369.517486803175416, 543292.889094421640038, 243372.224739309109282, 543286.892265408765525, 243359.899446249590255, 543273.522808454697952, 243351.119197699852521, 543280.476352679659612, 243347.247970350028481, 543286.122131334035657, 243337.7765911045135, 543296.057620435371064, 243334.741063464956824, 543308.138386368169449, 243329.524307716288604, 543325.591010258765891, 243327.85020582305151, 543328.110913920449093, 243316.950542500067968, 543344.515286674490198 ] },
				{ "PNU": "4183025021102820004",	"JIBUN": "282-4대",	"PY_JIGA_1": 820000.0,	"CALC_JIG_1": 980000.0,		"VRFY_JIG_1": 980000.0,		"READ_JIG_1": 980000.0,		"PY2_JIGA_1": 790000.0,		"PY3_JIGA_1": 789000.0,		"PY4_JIGA_1": 764000.0,		"coordinates": [ 243421.376804823754355, 543364.63989458407741, 243423.237906400318025, 543362.094999661436304, 243418.074152463348582, 543357.591799534857273, 243412.837286619556835, 543355.552576591377147, 243405.358478170004673, 543352.641258200863376, 243398.075244990264764, 543359.000875449040905, 243403.415986036707181, 543363.756081660976633, 243413.549377527815523, 543375.345452631241642, 243421.376804823754355, 543364.63989458407741 ] },
				{ "PNU": "4183025021102760000",	"JIBUN": "276대",	"PY_JIGA_1": 1202000.0,	"CALC_JIG_1": 1210000.0,	"VRFY_JIG_1": 0.0,			"READ_JIG_1": 1210000.0,	"PY2_JIGA_1": 1171000.0,	"PY3_JIGA_1": 1171000.0,	"PY4_JIGA_1": 1132000.0,	"coordinates": [ 243351.119197699852521, 543280.476352679659612, 243347.274419716850389, 543276.273210393730551, 243336.296886453812476, 543289.841602026601322, 243322.944234339374816, 543306.421861423063092, 243323.635119415062945, 543308.820873999036849, 243334.741063464956824, 543308.138386368169449, 243337.7765911045135, 543296.057620435371064, 243347.247970350028481, 543286.122131334035657, 243351.119197699852521, 543280.476352679659612 ] },
				{ "PNU": "4183025021102690027",	"JIBUN": "269-27대",	"PY_JIGA_1": 699200.0,	"CALC_JIG_1": 736000.0,		"VRFY_JIG_1": 0.0,			"READ_JIG_1": 736000.0,		"PY2_JIGA_1": 662400.0,		"PY3_JIGA_1": 660500.0,		"PY4_JIGA_1": 639400.0,		"coordinates": [ 243404.229123477591202, 543294.88466320571024, 243408.294162987644086, 543293.320861134445295, 243401.333801820437657, 543280.521644569816999, 243421.627144020982087, 543269.538657765486278, 243421.993173150316579, 543268.837680012802593, 243417.303535764687695, 543261.69952235755045, 243418.793661201896612, 543258.695614124648273, 243416.184784736076836, 543256.437512881006114, 243411.053794854728039, 543257.097273438819684, 243408.675849388091592, 543256.311171100591309, 243405.649918816750869, 543255.310040883952752, 243406.909801024536137, 543257.674079709104262, 243399.566672480490524, 543261.75171227089595, 243397.930643906933255, 543262.658630418474786, 243391.584308251214679, 543271.102273970609531, 243404.229123477591202, 543294.88466320571024 ] },
				{ "PNU": "4183025021102690002",	"JIBUN": "269-2대",	"PY_JIGA_1": 2131000.0,	"CALC_JIG_1": 2184000.0,	"VRFY_JIG_1": 0.0,			"READ_JIG_1": 2184000.0,	"PY2_JIGA_1": 2079000.0,	"PY3_JIGA_1": 2068000.0,	"PY4_JIGA_1": 2005000.0,	"coordinates": [ 243418.793661201896612, 543258.695614124648273, 243417.303535764687695, 543261.69952235755045, 243421.993173150316579, 543268.837680012802593, 243422.270151668228209, 543269.260689313756302, 243433.857653408835176, 543256.278320891782641, 243438.916863732709317, 543250.801595129421912, 243427.292407642118633, 543240.883142876671627, 243427.201401007390814, 543241.044137450284325, 243418.793661201896612, 543258.695614124648273 ] },
			];

			var source = tCommon.setGeometry(5186);
			var dest = tCommon.setGeometry(4326);

			data.forEach( (item, index)=> {
				var position = tCommon.setPosition( item["coordinates"], 50, "coordinates" );
				position = tCommon.transformCoordinates( source, dest, position);
				var center = tCommon.getMassCenter(position.coordinates);
				Control.Load.createjigaPOI( item["PNU"], item["JIBUN"], item["PY_JIGA_1"], center );
			});
		},
		createjigaPOI : function( _objkey, _jibun, _prise, _center )
		{
			var color, prise;
			prise = parseFloat(_prise/30000);
			color = tcanvas.setJSONColor(255, 255, 255, 255, 0, 0, 0, 255);

			tImage.setjigaPOI( 80, 80, 0, _jibun, _prise, 4, color );

			if( prise < 10)			color = tcanvas.setJSONColor( 22, 22, 173, 255, 22, 22, 173, 255 );
			else if( prise < 20)	color = tcanvas.setJSONColor( 31, 67, 184, 255, 31, 67, 184, 255 );
			else if( prise < 30)	color = tcanvas.setJSONColor( 31, 181, 176, 255, 31, 181, 176, 255 );
			else if( prise < 40)	color = tcanvas.setJSONColor( 43, 195, 155, 255, 43, 195, 155, 255 );
			else if( prise < 50)	color = tcanvas.setJSONColor( 174, 180, 26, 255, 174, 180, 26, 255 );
			else if( prise < 60)	color = tcanvas.setJSONColor( 202, 179, 52, 255, 202, 179, 52, 255 );
			else if( prise < 70)	color = tcanvas.setJSONColor( 187, 67, 38, 255, 187, 67, 38, 255 );
			else					color = tcanvas.setJSONColor( 241, 90, 88, 255, 241, 90, 88, 255 );

			var data = tcanvas.getData();
			var size = tcanvas.getSize();
			var font = tPOI.setfont( "", null, 0, 0, 255, 255, 255, 255, 0, 0, 0, 255 );
			tPOI.createShape( _objkey, _center[0], _center[1], prise+60, data, size, font, true, color);
		},

		loadGuData : function ()
		{
			var data = [
				{ "PNU": "41830250",	"name": "양평읍",	"lon": 127.512910269425,	"lat": 37.494441458099,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 35361 },
				{ "PNU": "41830310",	"name": "강상면",	"lon": 127.472695540588,	"lat": 37.468040680096,	"0": 11,"1": 1199, 	"2" : 486,	"null" : 16871 },
				{ "PNU": "41830320",	"name": "강하면",	"lon": 127.417922811753,	"lat": 37.480306689959,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 18583 },
				{ "PNU": "41830330",	"name": "양서면",	"lon": 127.376441998262,	"lat": 37.547529992480,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 14258 },
				{ "PNU": "41830340",	"name": "옥천면",	"lon": 127.469792076315,	"lat": 37.533914479859,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 12522 },
				{ "PNU": "41830350",	"name": "서종면",	"lon": 127.389289772973,	"lat": 37.583438024053,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 0 },
				{ "PNU": "41830360",	"name": "단월면",	"lon": 127.672459617014,	"lat": 37.542874592931,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 0 },
				{ "PNU": "41830370",	"name": "청운면",	"lon": 127.750304160653,	"lat": 37.539240794309,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 0 },
				{ "PNU": "41830380",	"name": "양동면",	"lon": 127.755003173825,	"lat": 37.419542988768,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 0 },
				{ "PNU": "41830395",	"name": "지평면",	"lon": 127.658367085792,	"lat": 37.446020355035,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 0 },
				{ "PNU": "41830400",	"name": "용문면",	"lon": 127.595499255042,	"lat": 37.486162262118,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 2728 },
				{ "PNU": "41830410",	"name": "개군면",	"lon": 127.552143136605,	"lat": 37.429885888874,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 13520 }
				];
			let graphSet = {
				size: {
					width: 450,
					height: 788,
				},
				legend: {
					0: ["legend0", "일치", { r: 200, g: 22, b: 90, a: 158 }],
					1: ["legend1", "불일치", { r: 200, g: 150, b: 111, a: 30 }],
					2: ["legend2", "조사전", { r: 200, g: 150, b: 150, a: 150 }],
				},
				data: {
					name: "test",
					set: [100, 50]
				},
				interval: {
					min: 0,
					max: 20000,
					interval: 1000,
				},
				animation: {
					speed: 0.1
				},
			};

			var objkey, name,
				dataSet,
				lon, lat, alt;

			for(key of data) {
				objkey = key["PNU"];
				name = key["name"];
				dataSet = [ key["1"], key["2"], (key["0"] + key["null"])];
				lon = key["lon"];
				lat = key["lat"];
				alt = 300;

				graphSet.data.name = name;
				graphSet.data.set = dataSet;
				tGraph.createShape(objkey, lon, lat, alt, graphSet);
			}

			tGraph.setMaxDistance(200000);
		},

		loadCoronaData : function ()
		{
			var data = [
				{ "PNU": "41830250",	"name": "양평읍",	"lon": 127.512910269425,	"lat": 37.494441458099,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 35361 },
				{ "PNU": "41830310",	"name": "강상면",	"lon": 127.472695540588,	"lat": 37.468040680096,	"0": 11,"1": 1199, 	"2" : 486,	"null" : 16871 },
				{ "PNU": "41830320",	"name": "강하면",	"lon": 127.417922811753,	"lat": 37.480306689959,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 18583 },
				{ "PNU": "41830330",	"name": "양서면",	"lon": 127.376441998262,	"lat": 37.547529992480,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 14258 },
				{ "PNU": "41830340",	"name": "옥천면",	"lon": 127.469792076315,	"lat": 37.533914479859,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 12522 },
				{ "PNU": "41830350",	"name": "서종면",	"lon": 127.389289772973,	"lat": 37.583438024053,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 0 },
				{ "PNU": "41830360",	"name": "단월면",	"lon": 127.672459617014,	"lat": 37.542874592931,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 0 },
				{ "PNU": "41830370",	"name": "청운면",	"lon": 127.750304160653,	"lat": 37.539240794309,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 0 },
				{ "PNU": "41830380",	"name": "양동면",	"lon": 127.755003173825,	"lat": 37.419542988768,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 0 },
				{ "PNU": "41830395",	"name": "지평면",	"lon": 127.658367085792,	"lat": 37.446020355035,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 0 },
				{ "PNU": "41830400",	"name": "용문면",	"lon": 127.595499255042,	"lat": 37.486162262118,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 2728 },
				{ "PNU": "41830410",	"name": "개군면",	"lon": 127.552143136605,	"lat": 37.429885888874,	"0": 0,	"1": 0, 	"2" : 0,	"null" : 13520 }
				];

			var bar = [
				//양평읍
				//양평읍
				{ "PNU": "41830250",	"COUNT": 500,	"COLOR": 0, 	"name": "접종자",		"geometry": "POINT((127.512910269425 37.494441458099))" },
				{ "PNU": "41830250",	"COUNT": 1500,	"COLOR": 1, 	"name": "접종대상자",	"geometry": "POINT((127.512910269425 37.494441458099))" },
				//강상면
				{ "PNU": "41830310",	"COUNT": 800,	"COLOR": 0, 	"name": "접종자",		"geometry": "POINT((127.472695540588 37.468040680096))" },
				{ "PNU": "41830310",	"COUNT": 1200,	"COLOR": 1, 	"name": "접종대상자",	"geometry": "POINT((127.472695540588 37.468040680096))" },
				//강하면
				{ "PNU": "41830320",	"COUNT": 700,	"COLOR": 0, 	"name": "접종자",		"geometry": "POINT((127.417922811753 37.480306689959))" },
				{ "PNU": "41830320",	"COUNT": 1300,	"COLOR": 1, 	"name": "접종대상자",	"geometry": "POINT((127.417922811753 37.480306689959))" },
				//양서면
				{ "PNU": "41830330",	"COUNT": 600,	"COLOR": 0, 	"name": "접종자",		"geometry": "POINT((127.376441998262 37.547529992480))" },
				{ "PNU": "41830330",	"COUNT": 1400,	"COLOR": 1, 	"name": "접종대상자",	"geometry": "POINT((127.376441998262 37.547529992480))" },
				//옥천면
				{ "PNU": "41830340",	"COUNT": 500,	"COLOR": 0, 	"name": "접종자",		"geometry": "POINT((127.469792076315 37.533914479859))" },
				{ "PNU": "41830340",	"COUNT": 1500,	"COLOR": 1, 	"name": "접종대상자",	"geometry": "POINT((127.469792076315 37.533914479859))" },
				//서종면
				{ "PNU": "41830350",	"COUNT": 400,	"COLOR": 0, 	"name": "접종자",		"geometry": "POINT((127.389289772973 37.583438024053))" },
				{ "PNU": "41830350",	"COUNT": 1600,	"COLOR": 1, 	"name": "접종대상자",	"geometry": "POINT((127.389289772973 37.583438024053))" },
				//단월면
				{ "PNU": "41830360",	"COUNT": 900,	"COLOR": 0, 	"name": "접종자",		"geometry": "POINT((127.672459617014 37.542874592931))" },
				{ "PNU": "41830360",	"COUNT": 1700,	"COLOR": 1, 	"name": "접종대상자",	"geometry": "POINT((127.672459617014 37.542874592931))" },
				//청운면
				{ "PNU": "41830370",	"COUNT": 300,	"COLOR": 0, 	"name": "접종자",		"geometry": "POINT((127.750304160653 37.539240794309))" },
				{ "PNU": "41830370",	"COUNT": 1800,	"COLOR": 1, 	"name": "접종대상자",	"geometry": "POINT((127.750304160653 37.539240794309))" },
				//양동면
				{ "PNU": "41830380",	"COUNT": 500,	"COLOR": 0, 	"name": "접종자",		"geometry": "POINT((127.755003173825 37.419542988768))" },
				{ "PNU": "41830380",	"COUNT": 1900,	"COLOR": 1, 	"name": "접종대상자",	"geometry": "POINT((127.755003173825 37.419542988768))" },
				//지평면
				{ "PNU": "41830395",	"COUNT": 600,	"COLOR": 0, 	"name": "접종자",		"geometry": "POINT((127.658367085792 37.446020355035))" },
				{ "PNU": "41830395",	"COUNT": 1200,	"COLOR": 1, 	"name": "접종대상자",	"geometry": "POINT((127.658367085792 37.446020355035))" },
				//용문면
				{ "PNU": "41830400",	"COUNT": 700,	"COLOR": 0, 	"name": "접종자",		"geometry": "POINT((127.595499255042 37.486162262118))" },
				{ "PNU": "41830400",	"COUNT": 1200,	"COLOR": 1, 	"name": "접종대상자",	"geometry": "POINT((127.595499255042 37.486162262118))" },
				//개군면
				{ "PNU": "41830410",	"COUNT": 800,	"COLOR": 0, 	"name": "접종자",		"geometry": "POINT((127.552143136605 37.429885888874))" },
				{ "PNU": "41830410",	"COUNT": 1300,	"COLOR": 1, 	"name": "접종대상자",	"geometry": "POINT((127.552143136605 37.429885888874))" }
				];

			if(OLOAD.m_corona_bar == null)			OLOAD.m_corona_bar = new POLYGON();
			if(OLOAD.m_corona_poi == null)			OLOAD.m_corona_poi = new POI;
			if(OLOAD.m_corona_eup == null)			OLOAD.m_corona_eup = new POI;


			OLOAD.m_corona_bar.createLayer("CORONA_BAR");
			OLOAD.m_corona_poi.createLayer("CORONA_POI");
			OLOAD.m_corona_eup.createLayer("CORONA_EUP_POI");

			OLOAD.m_corona_bar.setMaxDistance(200000.0);
			OLOAD.m_corona_poi.setMaxDistance(5000.0);
			OLOAD.m_corona_eup.setMaxDistance(200000.0);

			let obj_bar, obj_poi, key, lon, lat, len;
			obj_bar = obj_poi = null;
			key = "";
			lon = 0;
			lat = 0;

			len = 0.0015;

			bar.forEach((item, index) => {
				let position = tCommon.setPosition( item["geometry"], 10, "POINT" );
				key = item["PNU"];
				lon = position[0][0];
				lat = position[0][1];

				obj_bar = obj_poi = null;

				if(item["COLOR"] == 0)			lon += len;
				else if(item["COLOR"] == 1)		lon -= len;
				// bar
				obj_bar = OLOAD.createCoronaBar(key, lon, lat, 10, item["COUNT"], item["COLOR"], 128);
				OLOAD.m_corona_bar.addObject(obj_bar, 0);
				// POI
				obj_poi = OLOAD.createCoronaPOI(key, lon, lat, 10, item["COUNT"]*2, item["COLOR"]);
				OLOAD.m_corona_poi.addObject(obj_poi, 0);
				obj_poi = OLOAD.createCoronaBottonPOI(key+"_b", lon, lat, 10, -200, item["COLOR"]);
				OLOAD.m_corona_poi.addObject(obj_poi, 0);
			});

			data.forEach((item, index) => {
				//let position = tCommon.setPosition( item["geometry"], 10, "POINT" );
				key = item["PNU"];
				lon = item["lon"];
				lat = item["lat"];

				obj_poi = null;
				// POI
				obj_poi = OLOAD.createEupPOI(key, lon, lat, 2100, item["name"]);
				OLOAD.m_corona_eup.addObject(obj_poi, 0);
			});

			OLOAD.m_corona_bar.setVisibleLayer(false);
			OLOAD.m_corona_poi.setVisibleLayer(false);
			OLOAD.m_corona_eup.setVisibleLayer(false);
		},


		// 지목 데이터 가시화
		// - 빌보드, 벽
		loadData : function ( _data, _lon, _lat, _alt )
		{
			var ids		= _data["cadastral"]["OGR_FID"];
			var pnu 	= _data["cadastral"]["pnu"];
			var jibun	= _data["cadastral"]["jibun"];
			let	name 	= this.checkOneJiMok		( _data["cadastral"]["i"] );
			let	same 	= this.checkSame			( _data["cadastral"]["j"] );
			var mode 	= Number( _data["cadastral"]["k"] );

			if( same == "일치" ) {
				if( mode == 0 ) 	editname = name;
				color = CETC.setJSONColor( 35, 114, 191, 255, 35, 114, 191, 255 );
			} else if( same == "불일치" )	{
				if( mode == 0 )		editname = "미정";
				color = CETC.setJSONColor( 190, 140, 42, 255, 190, 140, 42, 255 );
			} else {
				if( mode == 0 )		editname = this.checkOneJiMok( mode );
				color = CETC.setJSONColor( 255, 255, 255, 255, 255, 255, 255, 255 );
			}

			var source = tCommon.setGeometry(5186);
			var dest = tCommon.setGeometry(4326);

			var position = tCommon.setPosition( _data["cadastral"]["geometry"], 80, "MULTIPOLYGON" );
		},
		outLine : (_coordinates, _type )=> {
			var position = tCommon.setPosition(_coordinates, 35, _type),
				source = tCommon.setGeometry(5174),
				dest = tCommon.setGeometry(4326),
				coordinates, min, max

			tSkyLine.deleteLayer("SIMPLE_SKYLine");
			tSkyLine.createLayer("SIMPLE_SKYLine");
			tSkyLine.setMaxDistance(200000.0);

			position.forEach((item, index) => {
				var key = "test_" + index;
				coordinates = tCommon.transformCoordinates(source, dest, item);
				tSkyLine.createShape(key, coordinates.coordinates, "XYZ", "nomal", 1.5, 120, 125, 130, 255, 3);
				if(index == 0) {
					min = coordinates.min;
					max = coordinates.max;
				} else {
					if(min.x > coordinates.min.x)	min.x = coordinates.min.x;
					if(min.y > coordinates.min.y)	min.y = coordinates.min.y;
					if(max.x < coordinates.max.x)	max.x = coordinates.max.x;
					if(max.y < coordinates.max.y)	max.y = coordinates.max.y;
				}
			});

			var centerx, centery;
			centerx = min.x + max.x;
			centery = min.y + max.y;
			centerx *= 0.5;
			centery *= 0.5;
			Module.XDSetCamPositionLonLat(centerx, centery, 5000, 90);
		},

		loadJigaData : (_data) =>
		{
			if( OLOAD.m_jiga_Polygon == null) {
				OLOAD.m_jiga_Polygon = new POLYGON();
				OLOAD.m_jiga_Polygon.createLayer( "YP_JIGA_OBJECT" );
				OLOAD.m_jiga_Polygon.setMaxDistance(20000);
			}

			var dataList = OLOAD.m_checkList;

			var key,
				coordinates, jiga,
				centerx, centery, alt,
				r, g, b, a,
				obj;

			console.log(_data);
			alt = 16;
			a = Number($("#yp_invisible").val());
			_data.landRegister.forEach((item, index) => {

				jiga = Number(item.JIGA);
				key = item.OGR_FID;


				if(jiga == null) {
					console.log("jiga null");
				}

				if (typeof OLOAD.m_checkList[key] != 'undefined')	return; // 중첩시 반환
				OLOAD.m_checkList[Number(key)] = 1;

				coordinates = OLOAD.setPosition( item.geometry, "MULTIPOLYGON", 0);
				if (coordinates.coordinates.length < 3) return null;

				centerx = (coordinates.min.x + coordinates.max.x) * 0.5;
				centery = (coordinates.min.y + coordinates.max.y) * 0.5;

				obj = null;
				obj = OLOAD.createCircle(key, centerx, centery, alt, jiga, a);
				OLOAD.m_jiga_Polygon.addObject(obj, 0);
			});

			OLOAD.m_checkMode = 3;
			OLOAD.createJigaViewInfo("Legend");
			/*
			OLOAD.m_viewInfoLon = center.Longitude;
			OLOAD.m_viewInfoLat = center.Latitude;
			OLOAD.m_viewInfoAlt = height;
			*/
			OLOAD.moveViewInfo();
		},

		loadCenterData : (data) =>
		{
			var layer,
				key, object, r, g, b, a, height, boardheight,
				terrain, coordinates,
				lon, lat,
				value;

			if(data.landRegister === null) return;
			if(data.landRegister.length == 0) return;
			key = data.landRegister.pnu;

			OLOAD.m_centerKey = key;

			object = null;
			r=g=b=255;
			a = 128;
			height = 40;

			value = OLOAD.createLayer(0);
			layer = value.layer;
			terrain = value.terrain;

			coordinates = OLOAD.setPosition( data.landRegister.geometry, "MULTIPOLYGON", height);
			
			if (coordinates.coordinates.length < 3) return null;

			value = OLOAD.setTerrainHeight(coordinates);

			// 기본 o
			var objVal = "r";
			if(objVal=="o" || objVal=="w" || objVal=="oa" || objVal=="oc" ) {
				OLOAD.m_centerheight = (value.max + value.min)*0.5;
				height = 15;
				boardheight = value.max + 5;
			}
			else {
				boardheight = height = value.max+5;
			}

			OLOAD.m_minheight=height;
			OLOAD.m_maxheight=boardheight-5;

			// 삭제 금지
			coordinates.coordinates.forEach((item, index) => {
				if(objVal=="vl" || objVal=="vd")		item[2] = (tCommon.getPickPoint(item[0], item[1]))+2;
				else									item[2] = height;
			});

			/* 원지목 종류에 따라 객체 색상 설정 */
//			color = OLOAD.areaLandUseColor(Number(data.landRegister.ori));
//			r = color.r;
//			g = color.g;
//			b = color.b;

			object = OLOAD.createObject(objVal, key, coordinates, boardheight, 1, r, g, b, a, 128, 128, 128, a)
			if(object == null) return;
			layer.addObject(object.object, 0);
			layer.setMaxDistance(100000000.0);
			layer.m_layer.setSelectable(false);
		},

		loadConditionData : (data) => {
			if(data.landRegister === null) return;
			if(data.landRegister.length == 0) return;
			var layer,
				key, object, r, g, b, a, height,
				terrain, coordinates,
				value;

			value = OLOAD.createLayer(1);
			layer = value.layer;
			terrain = value.terrain;

			data.landRegister.forEach((item, index) => {
				key = item.OGR_FID;

				if(key == OLOAD.m_centerKey)	return;

				object = null;
				// 불일치
				r=150;
				g=111;
				b=30;
				a = 128;
				height = 15;

				coordinates = OLOAD.setPosition( item.geometry, "MULTIPOLYGON", OLOAD.m_minheight);
				if (coordinates.coordinates.length < 3) return null;

				var objVal = "r";

				if(objVal=="o" || objVal=="w" || objVal=="oa" || objVal=="oc") {
					height = OLOAD.m_minheight;
				} else				height = OLOAD.m_maxheight+5;
				coordinates.coordinates.forEach((pos) => {
					if(objVal=="vl" || objVal=="vd")		pos[2] = (tCommon.getPickPoint(pos[0], pos[1]))+2;
					else									pos[2] = height;
				});
				object = OLOAD.createObject(objVal, key, coordinates, OLOAD.m_maxheight, 1, r, g, b, a, 128, 128, 128, a)
				if(object == null) return;
				layer.addObject(object.object, 0);
			});
		},
		areaInfo : (_data) => {
			if(_data.landRegister === null) return;
			if(_data.landRegister.length == 0) return;

			var layer,
				key, object, color, r, g, b, a, h,
				width, height, scaleheight,
				coordinates,
				center,
				value, str,
				info = {};

			value = OLOAD.createLayer(2);
			layer = value.layer;

			width = Module.canvas.width;
			height = Module.canvas.height;
			scaleheight = 0;

			var map = Module.getMap();
			var tilt = Module.getViewCamera().getTilt();

			if( tilt < 85)	scaleheight = ( ( 90 - tilt) / 100 ) * ( height );
			width *= 0.5;
			height = (height+scaleheight)*0.5;
			center = map.ScreenToMapPointEX(new Module.JSVector2D(width, height));

			height = tCommon.getPickPoint(center.Longitude, center.Latitude);
			height +=5

			_data.landRegister.forEach((item, index) => {
				key = item.OGR_FID;
				object = null;
				// 통계 데이터
				 OLOAD.checkOneJiMok(item.ORI);
				if( info[item.ORI] == undefined )	value = 1;
				else								value = info[item.ORI] + 1;
				info[item.ORI] = value;
				/*
				str = OLOAD.checkOneJiMok(item.ORI);
				if( info[str] == undefined )	value = 1;
				else							value = info[str] + 1;
				info[str] = value;
				*/
				color = OLOAD.areaLandUseColor( item.ORI );
				r = color.r;
				g = color.g;
				b = color.b;

				a = 128;

				coordinates = OLOAD.setPosition( item.geometry, "MULTIPOLYGON", 15);
				if (coordinates.coordinates.length < 3) return null;
				// 개별 높이측정
				// 속도가 너무 느리다 webWorker로 테스트 해야한다
				//centerx = (coordinates.min.x + coordinates.max.x) * 0.5;
				//centery = (coordinates.min.y + coordinates.max.y) * 0.5;
				//height = tCommon.getPickPoint(centerx, centery);
				// 통합 높이측정
				// 속도는 빠른데 지형에 묻히는 경우가 있다

				object = OLOAD.createObject("o", key, coordinates, height, 1, r, g, b, a, 128, 128, 128, a)
				if(object == null) return;
				layer.addObject(object.object, 0);
			});
			OLOAD.m_checkMode = 2;
			OLOAD.createAreaViewInfo(info);
			OLOAD.m_viewInfoLon = center.Longitude;
			OLOAD.m_viewInfoLat = center.Latitude;
			OLOAD.m_viewInfoAlt = height;
			OLOAD.moveViewInfo();
		},
		createLayer : ( _type) => {
			var layer,
				terrain;

			if(_type == 0) {
				if(OLOAD.m_area_Polygon != null)		OLOAD.m_area_Polygon.removeAllObject();

				if(OLOAD.m_center_Bill == null)			OLOAD.m_center_Bill = new BILLBOARD();
				if(OLOAD.m_center_Line == null)			OLOAD.m_center_Line = new SKYLINE();
				if(OLOAD.m_center_Polygon == null)		OLOAD.m_center_Polygon = new POLYGON();

				OLOAD.m_center_Bill.createLayer( "Center_BILL" );
				OLOAD.m_center_Line.createLayer( "Center_LINE" );
				OLOAD.m_center_Polygon.createLayer( "Center_Polygon" );

				OLOAD.m_center_Bill.removeAllObject();
				OLOAD.m_center_Line.removeAllObject();

//				if(OLOAD.spaceAnalysisCnt < 1){
					OLOAD.m_center_Polygon.removeAllObject();
//				}

//				OLOAD.spaceAnalysisCnt++;
			} else if(_type == 1) {
				if(OLOAD.m_area_Polygon != null)		OLOAD.m_area_Polygon.removeAllObject();

				if(OLOAD.m_rect_Bill == null)			OLOAD.m_rect_Bill = new BILLBOARD();
				if(OLOAD.m_rect_Line == null)			OLOAD.m_rect_Line = new SKYLINE();
				if(OLOAD.m_rect_Polygon == null)		OLOAD.m_rect_Polygon = new POLYGON();

				OLOAD.m_rect_Bill.createLayer( "List_BILL" );
				OLOAD.m_rect_Line.createLayer( "List_LINE" );
				OLOAD.m_rect_Polygon.createLayer( "List_Polygon" );

				OLOAD.m_rect_Bill.removeAllObject();
				OLOAD.m_rect_Line.removeAllObject();
				OLOAD.m_rect_Polygon.removeAllObject();
			} else if(_type == 2) {

				if(OLOAD.m_center_Bill != null)			OLOAD.m_center_Bill.removeAllObject();
				if(OLOAD.m_center_Line != null)			OLOAD.m_center_Line.removeAllObject();
				if(OLOAD.m_center_Polygon != null)		OLOAD.m_center_Polygon.removeAllObject();

				if(OLOAD.m_rect_Bill != null)			OLOAD.m_rect_Bill.removeAllObject();
				if(OLOAD.m_rect_Line != null)			OLOAD.m_rect_Line.removeAllObject();
				if(OLOAD.m_rect_Polygon != null)		OLOAD.m_rect_Polygon.removeAllObject();

				if(OLOAD.m_area_Polygon == null)		{
					OLOAD.m_area_Polygon = new POLYGON();
					OLOAD.m_area_Polygon.createLayer( "Area_Polygon" );
					OLOAD.m_area_Polygon.setMaxDistance(3500);
				}
				OLOAD.m_area_Polygon.removeAllObject();
			}

			Module.getAnalysis().setShadowCadastralRenderMode(false);
			terrain = false;

			if(_type == 2)	layer = OLOAD.m_area_Polygon;
			else {
				var objVal = "r";
				if(objVal=="o" || objVal=="oa" || objVal=="oc") {
					if(_type == 0) 	layer = OLOAD.m_center_Polygon;
					else			layer = OLOAD.m_rect_Polygon;
					terrain = true;
				} else if(objVal=="w") {
					if(_type == 0) 	layer = OLOAD.m_center_Polygon;
					else			layer = OLOAD.m_rect_Polygon;
				} else if(objVal=="r") {
					if(_type == 0) 	layer = OLOAD.m_center_Polygon;
					else			layer = OLOAD.m_rect_Polygon;
					Module.getAnalysis().setShadowCadastralRenderMode(true);
				} else if(objVal=="nl") {
					if(_type == 0) 	layer = OLOAD.m_center_Line;
					else			layer = OLOAD.m_rect_Line;
				} else if(objVal=="nd")	{
					if(_type == 0) 	layer = OLOAD.m_center_Line;
					else			layer = OLOAD.m_rect_Line;
				} else if(objVal=="cl")	{
					if(_type == 0) 	layer = OLOAD.m_center_Line;
					else			layer = OLOAD.m_rect_Line;
				} else if(objVal=="cd")	{
					if(_type == 0) 	layer = OLOAD.m_center_Line;
					else			layer = OLOAD.m_rect_Line;
				} else if(objVal=="vl") {
					if(_type == 0) 	layer = OLOAD.m_center_Line;
					else			layer = OLOAD.m_rect_Line;
					terrain = true;
				} else if(objVal=="vd")	{
					if(_type == 0) 	layer = OLOAD.m_center_Line;
					else			layer = OLOAD.m_rect_Line;
					terrain = true;
				}
			}
			return {
				layer : layer,
				terrain : terrain
			}
		},

		createObject : (_type, _key, _coordinates, _height, _lineWidth, fr, fg, fb, fa, sr, sg, sb, sa) => {
			var object = null;
			if(_type=="o" || _type=="oa" || _type=="oc")
				object = OLOAD.createPolygon	(_key, _coordinates, _height, fr, fg, fb, fa);
			else if(_type=="w")			object = OLOAD.createWaill		(_key, _coordinates, _height, fr, fg, fb, fa, sr, sg, sb, sa);
			else if(_type=="r")			object = OLOAD.createRTTLine	(_key, _coordinates);
			else if(_type=="nl")		object = OLOAD.createLine		(_key, _coordinates, "XYZ", "nomal", "no", 0, fr,fg,fb,fa, _lineWidth);
			else if(_type=="nd")		object = OLOAD.createLine		(_key, _coordinates, "XYZ", "nomal", "depth", 0, fr,fg,fb,fa, _lineWidth);
			else if(_type=="cl")		object = OLOAD.createLine		(_key, _coordinates, "XYZ", "combine", "no", 3, fr,fg,fb,fa, _lineWidth);
			else if(_type=="cd")		object = OLOAD.createLine		(_key, _coordinates, "XYZ", "combine", "depth", 3, fr,fg,fb,fa, _lineWidth);
			else if(_type=="vl")		object = OLOAD.createLine		(_key, _coordinates, "XYZ", "nomal", "no", 0, fr,fg,fb,fa, _lineWidth);
			else if(_type=="vd")		object = OLOAD.createLine		(_key, _coordinates, "XYZ", "nomal", "depth", 0, fr,fg,fb,fa, _lineWidth);

			return object;
		},

		addPolygon : (_key, _layer, _coordinates, _height, _r, _g, _b, _a) => {
			var addalt, addkey, addobj, nheight;
			var vertices = new Module.JSVec3Array();
			var parts = new Module.Collection();

			parts.add(_coordinates.coordinates.length);
			nheight = 0;

			for(var i=0; i<3; i++) {
				vertices.clear();
				_coordinates.coordinates.forEach((item, index) => {
					addalt = item[2] + _height + nheight;
					vertices.push(new Module.JSVector3D(item[0], item[1], addalt));
				});

				if(i == 0) {
					_r = 255;	_g = 0;		_b = 0;
				} else if(i == 1) {
					_r = 0;		_g = 255;	_b = 0;
				} else if(i == 2) {
					_r = 0;		_g = 0;		_b = 255;
				}

				addkey = _key+"_"+i;
				addobj = null;
				addobj = tPolygon.getShape(0, addkey, vertices, parts, 10, _r, _g, _b, _a, 128, 128, 128, _a);
				_layer.addObject(addobj, 0);
				nheight += 10;
			}
			return nheight;
		},

		addChart : (_key, _layer, _jibun, _lon, _lat, _height, _r, _g, _b, _a) => {
			var addobj;
			let data = {
				size: {
					width: 100,
					height: 100,
				},
				legend: {
					0: ["legend0", "주거용", { r: 200, g: 22, b: 90, a: 158 }],
					1: ["legend1", "단독", { r: 200, g: 150, b: 111, a: 30 }],
				},
				data: {
					name: _jibun + "번지_건물용도",
					set: [100, 50]
				},
				interval: {
					min: 0,
					max: 100,
					interval: 10,
				},
				animation: {
					speed: 0.1
				},
			};
			addobj = null;
			addobj = tGraph.getShape(_key, _lon, _lat, _height+30, data);
			_layer.addObject(addobj, 0);
		},

		setPosition : ( _coordinates, _type, _height) => {
			var coordinates = tCommon.setPosition( _coordinates, _height, _type);
			coordinates = tCommon.transformCoordinates(
				tCommon.setGeometry(5174),
				tCommon.setGeometry(4326),
				coordinates[0]
			);
			return coordinates;
		},

		setTerrainHeight : (_coordinates) => {
			var height,
				leftuph, leftdownh, rightup, rightdown, centerh,
				minh, maxh;

			leftuph = tCommon.getPickPoint(_coordinates.min.x, _coordinates.max.y);
			leftdownh = tCommon.getPickPoint(_coordinates.min.x, _coordinates.min.y);
			rightup = tCommon.getPickPoint(_coordinates.max.x, _coordinates.max.y);
			rightdown = tCommon.getPickPoint(_coordinates.max.x, _coordinates.min.y);
			centerh = tCommon.getPickPoint((_coordinates.min.x+_coordinates.max.x)*0.5, (_coordinates.min.y+_coordinates.max.y)*0.5);

			minh = maxh = leftuph;
			if(minh > leftdownh)		minh = leftdownh;
			if(maxh < leftdownh)		maxh = leftdownh;

			if(minh > rightup)			minh = rightup;
			if(maxh < rightup)			maxh = rightup;

			if(minh > rightdown)		minh = rightdown;
			if(maxh < rightdown)		maxh = rightdown;

			if(minh > centerh)			minh = centerh;
			if(maxh < centerh)			maxh = centerh;

			return {
				min : minh,
				max : maxh
			}
		},

		createPolygon : (_key, _item, _height, _r, _g, _b, _a) => {
			var coordinates = _item;

			var vertices = new Module.JSVec3Array();
			var parts = new Module.Collection();

			coordinates.coordinates.forEach((item, index) => {
				vertices.push(new Module.JSVector3D(item[0], item[1], item[2]));
			});

			parts.add(coordinates.coordinates.length);
			var object = tPolygon.getShape(0, _key, vertices, parts, _height, _r, _g, _b, _a, 0, 0, 0, 0);

			var center = tCommon.getMassCenter(coordinates.coordinates);
			return {
				object: object,
				coordinates: coordinates
			}
		},

		createCircle : (_key, _lon, _lat, _alt, _jiga, _a) => {
			var center = new Module.JSVector3D( _lon, _lat, _alt),
				height,
				lr, lg, lb, color;

			if(_jiga == null || _jiga == 0 )	jiga = 3630;
			height = _jiga * 0.0005;

			//3630 min
			//705800 max
			//17단계 40000만원을 기준으로 만들자

			color = OLOAD.getJigaColor(_jiga);
			if( height < 40 ) height = 40;

			lr = color.r + 100;	if(lr>255) lr = 255;
			lg = color.g + 100;	if(lg>255) lg = 255;
			lb = color.b + 100;	if(lb>255) lb = 255;

			return tPolygon.getShape( 2, _key, center, 3, 4, height, color.r, color.g, color.b, _a, lr, lg, lb, _a);
			//return tPolygon.getShape( 2, _key, center, 3, 16, height, color.r, color.g, color.b, 255, color.r, color.g, color.b, 0);
		},

		createBuildCountBar : (_key, _lon, _lat, _alt, _count, _type, _size) => {
			var center = new Module.JSVector3D( _lon, _lat, _alt),
				lr, lg, lb, color;

			color = OLOAD.getBuildCountColor(_type);

			lr = color.r;
			lg = color.g;
			lb = color.b;

			_count *= 0.5;
			return tPolygon.getShape( 2, _key, center, _size, 32, _count, color.r, color.g, color.b, 255, color.r, color.g, color.b, 0);
		},

		createBuildCountPOI : (_key, _lon, _lat, _alt, _count, _type) => {
			var center = new Module.JSVector3D( _lon, _lat, _alt),
				height,
				fontSize;
			height = _count * 0.5;
			height += 20;

			console.log(height, _count);

			fontSize = height * 0.01;

				 if(fontSize < 1 )	fontSize = 12;
			else if(fontSize < 2 )	fontSize = 14;
			else if(fontSize < 3 )	fontSize = 16;
			else if(fontSize < 4 )	fontSize = 18;
			else 					fontSize = 20;

			fontSize = 14;

			var font = tPOI.setfont( ""+_count, null, fontSize, 0, 255, 255, 255, 255, 0, 0, 0, 255 );
			return tPOI.getShape( _key, _lon, _lat, height, null, 0, font, false, null);
		},

		createCoronaBar : (_key, _lon, _lat, _alt, _count, _type, _size) => {
			var center = new Module.JSVector3D( _lon, _lat, _alt),
				lr, lg, lb, color;

			color = OLOAD.getBuildCountColor(_type);

			lr = color.r;
			lg = color.g;
			lb = color.b;

			return tPolygon.getShape( 2, _key, center, _size, 32, _count, color.r, color.g, color.b, 255, color.r, color.g, color.b, 0);
		},

		createCoronaPOI : (_key, _lon, _lat, _alt, _count, _type) => {
			var center = new Module.JSVector3D( _lon, _lat, _alt),
				height,
				fontSize;
			height = _count * 0.5;
			height += 20;

			console.log(height, _count);
			fontSize = 14;
			var font = tPOI.setfont( "" + _count, null, fontSize, 0, 255, 255, 255, 255, 0, 0, 0, 255 );
			return tPOI.getShape( _key, _lon, _lat, height, null, 0, font, false, null);
		},

		createCoronaBottonPOI : (_key, _lon, _lat, _alt, _count, _type) => {
			var center = new Module.JSVector3D( _lon, _lat, _alt),
				fontSize,
				str;
			fontSize = 14;

			str = "";

			if(_type == 0)	str = "접종자";
			else 			str = "접종대상자"


			var font = tPOI.setfont( str, null, fontSize, 0, 255, 255, 255, 255, 0, 0, 0, 255 );
			return tPOI.getShape( _key, _lon, _lat, _alt, null, 0, font, false, null);
		},

		createEupPOI : (_key, _lon, _lat, _alt, _name) => {
			var center = new Module.JSVector3D( _lon, _lat, _alt),
				height,
				fontSize;

			fontSize = 20;

			var font = tPOI.setfont( _name, null, fontSize, 0, 255, 255, 255, 255, 0, 0, 0, 255 );
			return tPOI.getShape( _key, _lon, _lat, _alt, null, 0, font, false, null);
		},

		createWaill	: (_key, _item, _height, _fr, _fg, _fb, _fa, _sr, _sg, _sb, _sa) => {
			var coordinates = _item;

			var vertices = new Module.JSVec3Array();
			var parts = new Module.Collection();

			coordinates.coordinates.forEach((item, index) => {
				vertices.push(new Module.JSVector3D(item[0], item[1], item[2]));
			});
			parts.add(coordinates.coordinates.length);
			var object = tPolygon.getShape(1, _key, vertices, parts, _height, _fr, _fg, _fb, _fa, _sr, _sg, _sb, _sa);
			var center = tCommon.getMassCenter(coordinates.coordinates);
			return {
				object: object,
				coordinates: coordinates
			}
		},
		createRTTLine : (...args) => {
			var key = args[0],
				coordinates = args[1];
			// 오브젝트 생성
			var object = Module.createPolygon(key);
			var vertices = new Module.JSVec3Array();

			coordinates.coordinates.forEach((item, index) => {
				vertices.push(new Module.JSVector3D(item[0], item[1], 0));
			})

			var part = new Module.Collection();
			part.add(coordinates.coordinates.length);

			var polygonStyle = new Module.JSPolygonStyle();

			polygonStyle.setFill(true);
			polygonStyle.setOutLine(true);
			polygonStyle.setOutLineWidth(1.7);
			polygonStyle.setFillColor(new Module.JSColor(100, userSetup.vertclPynColorR, userSetup.vertclPynColorG, userSetup.vertclPynColorB));
			polygonStyle.setOutLineColor(new Module.JSColor(userSetup.vertclPynColorR, userSetup.vertclPynColorG, userSetup.vertclPynColorB));

			object.setPartCoordinates(vertices, part);
			object.setStyle(polygonStyle);
			object.setSelectable(false);

			return {
				object: object,
				coordinates: coordinates
			}
		},
		createLine : (...args) => {
			var key = args[0],
				coordinates = args[1];
				coordinatesStyle = args[2],
				shapeStyle = args[3],
				shapeDepth = args[4]
				shapeheight = args[5],
				r = args[6],
				g = args[7],
				b = args[8],
				a = args[9],
				lineWidth = args[10];
				terrain = args[11];

			var object = tSkyLine.getShape(key, coordinates.coordinates, coordinatesStyle, shapeStyle, shapeheight, shapeDepth,r,g,b,a, lineWidth);
			var center = tCommon.getMassCenter(coordinates.coordinates);

			return {
				object: object,
				coordinates: coordinates
			}
		},
		createCenterBoard : ( _key, _jibun, _object, _height) => {
			tImage.setBoard(256, 128, _jibun, 1);
			var image = tcanvas.getData();
			var size = tcanvas.getSize();

			var centerx, centery, h;
			centerx = (_object.coordinates.max.x + _object.coordinates.min.x) * 0.5;
			centery = (_object.coordinates.max.y + _object.coordinates.min.y) * 0.5;

			h = _object.coordinates.coordinates[0][2];
			_object.coordinates.coordinates.forEach((item, index) =>{ if(h<item[2])	h = item[2]; });
			h += 10;
			OLOAD.m_center_Bill.createShape(_key, centerx, centery, h + _height, image, size, 0.1);
		},
		createViewInfo : (_data) => {
			Module.SetViewInfo(true);
			var ori = OLOAD.checkOneJiMok(_data.ORI);
			var reOri = OLOAD.checkOneJiMok(_data.J0200);
			var same = OLOAD.checkSame(_data.J0100);
			var callback = OLOAD.imageViewInfo;

			var data;
			if(same == "일치") {
				data = {
					info: {
						지번 : _data.JIBUN,
						//조사자 : _data.MAIN,
						원지목: ori,
						일치여부: same,

						지가: _data.JIGA,
					},
					callback:callback
				};
			} else {
				data = {
					info: {
						지번 : _data.JIBUN,
						//조사자 : _data.MAIN,
						원지목: ori,
						재설정: reOri,
						일치여부: same,
						지가: _data.JIGA,
					},
					callback:callback
				};
			}

			// data 구성요소 중 info와 callback는 필수
			Module.CreateViewInfo(data);
			OLOAD.m_checkViewInfo = true;
		},
		//CreateViewInfo 내부에 넣은 콜백 함수
		imageViewInfo: function(...args) {
			tImage.setViewinfoBoard(args[0]);
			return {
				data: tcanvas.getData(),
				size: {
						width:tcanvas.m_canvas.width,
						height:tcanvas.m_canvas.height,
				}
			}
		},
		createAreaViewInfo : (_info) => {
			Module.SetViewInfo(true);
			var callback = OLOAD.imageAreaViewInfo;

			var data = {
				info: _info,
				callback:callback
			};

			Module.CreateViewInfo(data);
			OLOAD.m_checkViewInfo = true;
		},
		imageAreaViewInfo: function(...args) {
			tImage.setViewAreaBoard(args[0], OLOAD.checkOneJiMok, OLOAD.areaLandUseColor);
			return {
				data: tcanvas.getData(),
				size: {
						width:tcanvas.m_canvas.width,
						height:tcanvas.m_canvas.height,
				}
			}
		},

		createJigaViewInfo : (_info) => {
			Module.SetViewInfo(true);
			var callback = OLOAD.imageJigaViewInfo;

			var data = {
				info: _info,
				callback:callback
			};

			Module.CreateViewInfo(data);
			OLOAD.m_checkViewInfo = true;
		},
		imageJigaViewInfo: function(...args) {
			tImage.setViewJigaBoard(args, OLOAD.getJigaColor);
			return {
				data: tcanvas.getData(),
				size: {
						width:tcanvas.m_canvas.width,
						height:tcanvas.m_canvas.height,
				}
			}
		},

		moveViewInfo:function() {
			if(!OLOAD.m_checkViewInfo) {
				Module.SetViewInfo(false);
				return;
			}

			var position = Module.getMap().MapToScreenPointEX(new Module.JSVector3D(OLOAD.m_viewInfoLon, OLOAD.m_viewInfoLat, OLOAD.m_viewInfoAlt)),
				getcanvas = document.getElementById( "canvas" ),
				x, y;

			if(OLOAD.m_checkMode == 3) {
				// 범례 출력 화면에 종속
				// 카메라 고도와 상관없이 출력
				x = getcanvas.width - 40;
				y = getcanvas.height * 0.3;
			}
			else {
				// 정보 출력 객체에 종속
				if(position.x < 0 || position.y < 0) {
					Module.SetViewInfo(false);
					return;
				}

				if (Module.getViewCamera().getDistance() > 3500) {
					Module.SetViewInfo(false);
					return;
				}

				if(position.x > getcanvas.width || position.y > getcanvas.height) {
					Module.SetViewInfo(false);
					return;
				}

				if( OLOAD.m_checkMode == 1) {
						x = getcanvas.width - 100;
						y = getcanvas.height - (position.y+getcanvas.offsetTop)

					if( y < 0 || y > getcanvas.height) {
						Module.SetViewInfo(false);
						return;
					}
					// 카메라가 일정 높이 올라가면 false; 처리
					// 기존
					//y = getcanvas.height*0.5;
					x = position.x;
					y = getcanvas.height - (position.y);
				} else if( OLOAD.m_checkMode == 2) {
					getcanvas = document.getElementById( "canvas" );
					x = getcanvas.width - 40;
					y = getcanvas.height * 0.3;
				}
			}

			Module.SetViewInfo(true);
			Module.SetViewInfoPosition(x, y);
		},

		createBuildCount : function()
		{
			var bar = [
				{ "PNU": "0", "COLOR": 0, "COUNT": 700, "geometry": "POINT((127.43258518422991 37.50538923934177))" },
				{ "PNU": "1", "COLOR": 0, "COUNT": 414, "geometry": "POINT((127.43151965349162 37.50490703786441))" },
				{ "PNU": "2", "COLOR": 0, "COUNT": 795, "geometry": "POINT((127.4325828648166 37.50465473368759))" },
				{ "PNU": "3", "COLOR": 0, "COUNT": 738, "geometry": "POINT((127.43380720110592 37.50545057650959))" },
				{ "PNU": "4", "COLOR": 1, "COUNT": 307, "geometry": "POINT((127.43426058436455 37.50452310415491))" },		// 1st
				{ "PNU": "5", "COLOR": 0, "COUNT": 304, "geometry": "POINT((127.43331610459805 37.50500127150927))" },
				{ "PNU": "6", "COLOR": 1, "COUNT": 124, "geometry": "POINT((127.43344138175817 37.504538178997485))" },
				{ "PNU": "7", "COLOR": 0, "COUNT": 62, "geometry": "POINT((127.43419818617613 37.502042246866225))" },
				{ "PNU": "8", "COLOR": 0, "COUNT": 170, "geometry": "POINT((127.43624452763828 37.501484361397246))" },
				{ "PNU": "9", "COLOR": 0, "COUNT": 536, "geometry": "POINT((127.43634970126362 37.50025662660035))" },
				{ "PNU": "10", "COLOR": 0, "COUNT": 273, "geometry": "POINT((127.43410959136956 37.500112879852246))" },
				{ "PNU": "11", "COLOR": 0, "COUNT": 180, "geometry": "POINT((127.43216427660147 37.50047846088226))" },
				{ "PNU": "12", "COLOR": 1, "COUNT": 231, "geometry": "POINT((127.43267442203467 37.501574791481644))" },		// 2st
				{ "PNU": "13", "COLOR": 0, "COUNT": 136, "geometry": "POINT((127.42937467764321 37.499845763032155))" },
				{ "PNU": "14", "COLOR": 0, "COUNT": 142, "geometry": "POINT((127.4294616385851 37.49911983142745))" },
				{ "PNU": "15", "COLOR": 0, "COUNT": 144, "geometry": "POINT((127.43041275220335 37.49931064147519))" },
				{ "PNU": "16", "COLOR": 0, "COUNT": 155, "geometry": "POINT((127.42836047387738 37.49900808818737))" },
				{ "PNU": "17", "COLOR": 0, "COUNT": 727, "geometry": "POINT((127.42694000419331 37.49929323491551))" },
				{ "PNU": "18", "COLOR": 1, "COUNT": 387, "geometry": "POINT((127.42814811732052 37.49871546434291))" },		// 3st
				{ "PNU": "19", "COLOR": 0, "COUNT": 443, "geometry": "POINT((127.42246929741782 37.50120681637436))" },
				{ "PNU": "20", "COLOR": 0, "COUNT": 312, "geometry": "POINT((127.42332183346554 37.50030048458139))" },
				{ "PNU": "21", "COLOR": 0, "COUNT": 145, "geometry": "POINT((127.4218705084622 37.50010655489916))" },
				{ "PNU": "22", "COLOR": 0, "COUNT": 80, "geometry": "POINT((127.41957357332939 37.499474692385434))" },
				{ "PNU": "23", "COLOR": 1, "COUNT": 95, "geometry": "POINT((127.4218230980813 37.49877343854436))" },		// 4st
				{ "PNU": "24", "COLOR": 0, "COUNT": 260, "geometry": "POINT((127.42005851491133 37.49622655618181))" },
				{ "PNU": "25", "COLOR": 0, "COUNT": 147, "geometry": "POINT((127.41982670227733 37.49562135004075))" },
				{ "PNU": "26", "COLOR": 0, "COUNT": 349, "geometry": "POINT((127.41814874666545 37.495482787915805))" },
				{ "PNU": "27", "COLOR": 1, "COUNT": 144, "geometry": "POINT((127.41561289178696 37.49579208737059))" }		// 5st
			];

			var build = [
				{ "PNU": "2", "COLOR": 2, "COUNT": 50, "geometry": "POLYGON((127.43279180778204 37.50457017760223,127.43238709088233 37.504602378238715,127.43237392185117 37.504619256792445,127.43239085148664 37.50468408445895,127.43277561270581 37.50473928977294,127.43277932585244 37.50470059665009,127.43279180778204 37.50457017760223))" },
				{ "PNU": "6", "COLOR": 2, "COUNT": 50, "geometry": "POLYGON((127.43618496805429 37.50115813731884,127.4361706734216 37.501150315242874,127.43607980226388 37.50130970165951,127.43601368918986 37.50137983478302,127.43595617728984 37.50139642632649,127.43596616888114 37.501409129609165,127.43598438673928 37.50143238929339,127.43597878206884 37.501480027330295,127.43597744529443 37.50149133969543,127.4359901331832 37.50153023390574,127.43600226818816 37.50156739123337,127.43613173347994 37.501721462157455,127.4361608044731 37.50176945015211,127.43616100681251 37.50178484735929,127.43616148406863 37.501818407551625,127.43642121932024 37.50165072310365,127.43636143319722 37.50156573637707,127.43646515927874 37.50149159933108,127.43645958271256 37.50145044453069,127.43647483992018 37.501384390697275,127.43653287798674 37.50135520109656,127.43645584800338 37.50132713951203,127.43637605058046 37.501289879925956,127.43623525069196 37.50120156932304,127.43618496805429 37.50115813731884))" },
				{ "PNU": "11", "COLOR": 2, "COUNT": 50, "geometry": "POLYGON((127.42927930400651 37.49970631108974,127.42929256615196 37.49999125597755,127.42931200509521 37.49999308668211,127.42943829753875 37.499936875884195,127.4294700512799 37.49994259028232,127.42945512139595 37.49969843938219,127.42927930400651 37.49970631108974))" },
				{ "PNU": "17", "COLOR": 2, "COUNT": 50, "geometry": "POLYGON((127.42220753391906 37.500953532194586,127.42206672640911 37.50094951054743,127.42204570536946 37.50106687657406,127.42272656446048 37.501464122201305,127.42289288946618 37.501321829993984,127.42220753391906 37.500953532194586))" },
				{ "PNU": "24", "COLOR": 2, "COUNT": 50, "geometry": "POLYGON((127.41858104939313 37.49547908199778,127.41856147612133 37.495420298203584,127.41855963262259 37.4953897430146,127.4185375752413 37.495260429208734,127.41850696623328 37.49524654481958,127.41850344389266 37.49524758438419,127.41847696243258 37.49525405688063,127.41841265960882 37.49526534800395,127.41783891188794 37.495381770341204,127.41771644393776 37.495426377546224,127.41786680401921 37.49571903101204,127.41820164443419 37.495593936902985,127.41826086458387 37.49557145546553,127.41837884673255 37.4955539473869,127.41858104939313 37.49547908199778))" }
			];

			//console.log(bar);
			//console.log(build);
			if(OLOAD.m_build_count_bar == null)		OLOAD.m_build_count_bar = new POLYGON();
			if(OLOAD.m_build_count_poi == null)		OLOAD.m_build_count_poi = new POI;
			if(OLOAD.m_build_count_polygon == null)	OLOAD.m_build_count_polygon = new POLYGON();

			OLOAD.m_build_count_bar.createLayer("Bild_bar");
			OLOAD.m_build_count_poi.createLayer("Bild_POI");
			OLOAD.m_build_count_polygon.createLayer("Bild_polygon");

			OLOAD.m_build_count_bar.setMaxDistance(200000.0);
			OLOAD.m_build_count_poi.setMaxDistance(200000.0);
			OLOAD.m_build_count_polygon.setMaxDistance(200000.0);

			let obj_bar, obj_poi, obj_build, key, lon, lat;
			obj_bar = obj_poi = obj_build = null;
			key = "";
			lon = 0;
			lat = 0;

			// bar, poi 생성
			bar.forEach((item, index) => {
				let position = tCommon.setPosition( item["geometry"], 10, "POINT" );
				key = item["PNU"];
				lon = position[0][0];
				lat = position[0][1];

				obj_bar = obj_poi = null;
				// bar
				obj_bar = OLOAD.createBuildCountBar(key, lon, lat, 10, item["COUNT"], item["COLOR"], 16);
				OLOAD.m_build_count_bar.addObject(obj_bar, 0);
				// POI
				obj_poi = OLOAD.createBuildCountPOI(key, lon, lat, 10, item["COUNT"], item["COLOR"]);
				OLOAD.m_build_count_poi.addObject(obj_poi, 0);
			});

			// 건물 생성
			build.forEach((item, index)=>{
				let coordinates = {},
					fr, fg, fb, fa;
				coordinates.coordinates = tCommon.setPosition( item["geometry"], 10, "MULTIPOLYGON" )[0];
				coordinates.min = {x: 0, y: 0};
				coordinates.max = {x: 0, y: 0};

				key = item["PNU"];
				color = OLOAD.getBuildCountColor(item["COLOR"]);
				fr = color.r;
				fg = color.g;
				fb = color.b;
				fa = 150;

				obj_build = null;
				obj_build = OLOAD.createPolygon(key, coordinates, item["COUNT"], fr, fg, fb, fa);
				OLOAD.m_build_count_polygon.addObject(obj_build.object, 0);
				console.log(coordinates);
			});
		},

		deleteBuildCount : function()
		{
			OLOAD.m_build_count_poi.deleteLayer();
			OLOAD.m_build_count_polygon.deleteLayer();
			OLOAD.m_build_count_bar.deleteLayer();

			OLOAD.m_build_count_poi = null;
			OLOAD.m_build_count_polygon = null;
			OLOAD.m_build_count_bar = null;
		},

		checkOneJiMok : function( _num )	// 재설정 지목
		{
			if( _num == "undefined" || _num == "null" || _num == "")	return "데이터 없음"

			var str = "";

			_num = Number( _num );

			if		( _num == 1 )		str = "전"			;
			else if	( _num == 2 ) 		str = "답"			;
			else if	( _num == 3 ) 		str = "과수원"			;
			else if	( _num == 4 ) 		str = "목장용지"		;
			else if	( _num == 5 ) 		str = "임야"			;
			else if	( _num == 6 ) 		str = "광천지"			;
			else if	( _num == 7 ) 		str = "염전"			;
			else if	( _num == 8 ) 		str = "대"			;
			else if	( _num == 9 ) 		str = "공장용지"		;
			else if	( _num == 10 ) 		str = "학교용지"		;
			else if	( _num == 11 ) 		str = "주차장"			;
			else if	( _num == 12 ) 		str = "주유소"			;
			else if	( _num == 13 ) 		str = "창고용지"		;
			else if	( _num == 14 ) 		str = "도로"			;
			else if	( _num == 15 ) 		str = "철도용지"		;
			else if	( _num == 16 ) 		str = "제방"			;
			else if	( _num == 17 ) 		str = "하천"			;
			else if	( _num == 18 ) 		str = "구거"			;
			else if	( _num == 19 ) 		str = "유지"			;
			else if	( _num == 20 ) 		str = "양어장"			;
			else if	( _num == 21 ) 		str = "수도용지"		;
			else if	( _num == 22 ) 		str = "공원"			;
			else if	( _num == 23 ) 		str = "체육용지"		;
			else if	( _num == 24 ) 		str = "유원지"			;
			else if	( _num == 25 ) 		str = "종교용지"		;
			else if	( _num == 26 ) 		str = "사적지"			;
			else if	( _num == 27 ) 		str = "묘지"			;
			else if	( _num == 28 ) 		str = "잡종지"			;
			else if ( _num == 0 ) 		str = "미설정"			;
			else						str = "재설정확인요망"+_num;
			return str;
		},
		checkSame : function( _num )
		{
			if( _num == "undefined" || _num == "null" || _num == "")	return "미조사"

			var str = "";

			_num = Number( _num );

			if( _num == 1 ) 			str = "일치";
			else if( _num == 2 ) 		str = "불일치";
			else						str = "미조사";
			return str;
		},
		areaLandUseColor : function( _type )
		{
			/*
1 : 전		189	254	124
2 : 답		255	128	158
3 : 과수원		129	254	0
4 : 목장용지	129	254	0
5 : 임야		222	127	255
6 : 광천지		0	165	219
7 : 염전		252	2	3
8 : 대		222	127	255
9 : 공장용지	222	127	255
10 : 학교용지	2	255	253
11 : 주차장	200	200	200
12 : 주유소	220	163	108
13 : 창고용지	255	128	158
14 : 도로		255	255	255
15 : 철도용지	255	128	158
16 : 제방		193	221	111
17 : 하천		0	192	254
18 : 구거		0	128	255
19 : 유지		126	159	255
20 : 양어장	193	221	111
21 : 수도용지	112	164	222
22 : 공원		0	222	1
23 : 체육용지	0	222	1
24 : 유원지	0	222	1
25 : 종교용지	254	128	254
26 : 사적지	255	249	5
27 : 묘지		255	128	158
28 : 잡종지	255	128	158
*/
			var r, g, b, a;
			if( _type == 1 ) {
				r = 189;	g = 254;	b = 124;
			} else if( _type == 2 ) {
				r = 255;	g = 128;	b = 158;
			} else if( _type == 3 ) {
				r = 129;	g = 254;	b = 0;
			} else if( _type == 4 ) {
				r = 129;	g = 254;	b = 0;
			} else if( _type == 5 ) {
				r = 222;	g = 127;	b = 255;
			} else if( _type == 6 ) {
				r = 0;		g = 165;	b = 219;
			} else if( _type == 7 ) {
				r = 252;	g = 2;		b = 3;
			} else if( _type == 8 ) {
				r = 222;	g = 127;	b = 255;
			} else if( _type == 9 ) {
				r = 222;	g = 127;	b = 255;
			} else if( _type == 10 ) {
				r = 2;		g = 255;	b = 253;
			} else if( _type == 11 ) {
				r = 200;	g = 200;	b = 200;
			} else if( _type == 12 ) {
				r = 220;	g = 163;	b = 108;
			} else if( _type == 13 ) {
				r = 255;	g = 128;	b = 158;
			} else if( _type == 14 ) {
				r = 255;	g = 255;	b = 255;
			} else if( _type == 15 ) {
				r = 255;	g = 128;	b = 158;
			} else if( _type == 16 ) {
				r = 193;	g = 221;	b = 111;
			} else if( _type == 17 ) {
				r = 0;		g = 192;	b = 254;
			} else if( _type == 18 ) {
				r = 0;		g = 128;	b = 255;
			} else if( _type == 19 ) {
				r = 126;	g = 159;	b = 255;
			} else if( _type == 20 ) {
				r = 193;	g = 221;	b = 111;
			} else if( _type == 21 ) {
				r = 112;	g = 164;	b = 222;
			} else if( _type == 22 ) {
				r = 0;		g = 222;	b = 1;
			} else if( _type == 23 ) {
				r = 0;		g = 222;	b = 1;
			} else if( _type == 24 ) {
				r = 0;		g = 222;	b = 1;
			} else if( _type == 25 ) {
				r = 254;	g = 128;	b = 254;
			} else if( _type == 26 ) {
				r = 255;	g = 249;	b = 5;
			} else if( _type == 27 ) {
				r = 255;	g = 128;	b = 158;
			} else if( _type == 28 ) {
				r = 255;	g = 128;	b = 158;
			} else {
				r = 0;	g = 0;	b = 0;
			}

			var result_color =	{
									"r": r,
									"g": g,
									"b": b
								};
			return result_color;
		},

		getJigaColor : function( _jiga )
		{
			if(_jiga <= 40000) {
				r = 0;		g = 0;		b = 255;
			} else if(_jiga > 40000 && _jiga <= 80000) 	{
				r = 0;		g = 48;		b = 248;
			} else if(_jiga > 80000 && _jiga <= 120000) 	{
				r = 0;		g = 104;	b = 249;
			} else if(_jiga > 120000 && _jiga <= 160000) 	{
				r = 0;		g = 160;	b = 248;
			} else if(_jiga > 160000 && _jiga <= 200000) 	{
				r = 0;		g = 208;	b = 248;
			} else if(_jiga > 200000 && _jiga <= 240000) 	{
				r = 0;		g = 247;	b = 239;
			} else if(_jiga > 240000 && _jiga <= 280000) 	{
				r = 0;		g = 248;	b = 183;
			} else if(_jiga > 280000 && _jiga <= 320000) 	{
				r = 0;		g = 248;	b = 128;
			} else if(_jiga > 320000 && _jiga <= 360000) 	{
				r = 80;		g = 248;	b = 0;
			} else if(_jiga > 360000 && _jiga <= 400000) 	{
				r = 128;	g = 248;	b = 0;
			} else if(_jiga > 400000 && _jiga <= 440000) 	{
				r = 183;	g = 247;	b = 0;
			} else if(_jiga > 440000 && _jiga <= 480000) 	{
				r = 243;	g = 251;	b = 0;
			} else if(_jiga > 480000 && _jiga <= 520000) 	{
				r = 248;	g = 208;	b = 0;
			} else if(_jiga > 520000 && _jiga <= 560000) 	{
				r = 252;	g = 162;	b = 0;
			} else if(_jiga > 560000 && _jiga <= 600000) 	{
				r = 247;	g = 104;	b = 0;
			} else if(_jiga > 600000 && _jiga <= 640000) 	{
				r = 248;	g = 48;		b = 0;
			} else {
				r = 255;	g = 0;		b = 0;
			}

			var result_color =	{
									"r": r,
									"g": g,
									"b": b
								};
			return result_color;
		},
		getBuildCountColor : function( _type )
		{
			let r, g, b;
			r = g = b = 0;
				 if(_type == 0) {
				r = 129;
				g = 254;
				b = 0;
					 /*
				r = 30;
				g = 97;
				b = 2;
				*/
			}
			else if(_type == 1) {
				r = 197;
				g = 219;
				b = 183;
			}
			else if(_type == 2) {
				r = 251;
				g = 59;
				b = 36;
			}

			let result_color =	{
									"r": r,
									"g": g,
									"b": b
								};
			return result_color;

		},
	}
}
var OLOAD = Control.Load;
