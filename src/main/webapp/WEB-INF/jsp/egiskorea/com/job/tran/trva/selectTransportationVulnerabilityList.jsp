<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
<%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<%@ taglib prefix="ui" uri="http://egovframework.gov/ctl/ui"%>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>


<script type="text/javascript">
	//jquery
	$(document).ready(function(){
		console.log("selectTransportationVulnerabilityList.jsp");
		console.log("교통분석 - 대중교통 취약 분석");
		
		//검색 조건 세팅
		//getCmmCodeData("YPE001", "#trvaSearchForm select[name=searchArea]");	//읍면동
		getCmmCodeData("YPEMD", "#trvaSearchForm select[name=searchArea]");	//읍면동
		getTransVulnerBaseYMList();
		
		initTransVulner();
		
		$("#tranCloseBtn").on('click', function () {
			dtmap.layer.clear();
		});
		
	});
	
	//functions
	
	/**
     * 대중교통 취약분석 초기화
     */
	function initTransVulner(){

		selectTransVulnerList();
	}
	
	
	/**
     * 기준 연월
     */
	function getTransVulnerBaseYMList(){
		console.log("getTransVulnerBaseYMList()");
		
		$.ajax({
			type : "POST",
			url : "/job/tran/trva/getTransVulnerBaseYMList.do",
			//data : formData,
			dataType : "json",
			processData : false,
			contentType : false,
			async: false,
			success : function(returnData, status){
				if(status == "success") {
					console.log(returnData);
					
					var baseYmList = returnData.baseYmList;
					
					if(baseYmList){
						for(var i=0; i<baseYmList.length; i++){
							var stdrYm = baseYmList[i].stdrYm;
							
							var dYear 	= stdrYm.slice(0,4)+"년";
							var dMonth 	= stdrYm.slice(-2) +"월";

							var dhml = "<option value='"+stdrYm+"'>"+ dYear+" "+dMonth +"</option>";
							$("#trvaSearchForm select[name=stdrYm]").append(dhml);
							
						}
						
					}else{
						console.log("기준연월 데이터 조회 오류");
						return false;
					}
					
				}else{
					toastr.error("관리자에게 문의 바랍니다.", "정보를 불러오지 못했습니다.");
					return;
				}
			}, complete : function(){
				ui.loadingBar("hide");
			}
		});
		
		
		/*
		var today = new Date();
		
		for(var i=0; i<12; i++){
			
			var dYear = today.getFullYear();
			var dMonth = ('0' + (today.getMonth() + 1)).slice(-2);
			
			var dVal = dYear+""+dMonth;
			var dYM  = dYear+"년 "+dMonth+"월";

			var dhml = "<option value='"+dVal+"'>"+ dYM +"</option>";
			$("#trvaSearchForm select[name=stdrYm]").append(dhml);
			//console.log('dYM>>'+dYM);
			
			var dMonth = today.setMonth(today.getMonth()-1);
			var dDate = new Date(dMonth);
			today = dDate;
		}
		*/
	}
	
	/**
	* 대중교통 취약 분석 조회
	*/
	function selectTransVulnerList(){
		console.log("selectTransVulnerList()");
		
		//var data = $("#trvaSearchForm").serialize();
		//console.log(data);
		
		var formData = new FormData($("#trvaSearchForm")[0]);
		
		//formData.append("gender","a");
		
		ui.loadingBar("show");
		
		$.ajax({
			type : "POST",
			url : "/job/tran/trva/selectTransportationVulnerabilityList.do",
			data : formData,
			dataType : "json",
			processData : false,
			contentType : false,
			//contentType: "application/json; charset=utf-8",
			async: false,
			success : function(returnData, status){
				if(status == "success") {
					
					//console.log(returnData);
					//var liList = returnData.resultListAllLi;
					var gridList = returnData.resultListAllGrid;
					
					var geomCenterPos = returnData.geomCenterPos;
					if(geomCenterPos){
						var geomcenter = geomCenterPos.geomcenter;
						//console.log(geomcenter);
						
						const formatWKT = new ol.format.WKT();
						let geometryCenter = formatWKT.readGeometry(geomcenter);
						//console.log(geometryCenter);
						
						//dtmap.getCenter();
						
						console.log("-----------------------------")
						console.log(geometryCenter.getCoordinates());
												
						if(gridList){	
							
							if(dtmap.mod == '2D'){
								console.log("2D");
								
								//중심점 이동 및 zoom 설정
					            var options = {
					            		zoom : 13	
					            }
								
								dtmap.setCenter(
									[geometryCenter.getCoordinates()[0]-5000, geometryCenter.getCoordinates()[1]]
									, options
								);
								
							}else if(dtmap.mod == '3D'){
								console.log("3D");
								
								geometryCenter.setCoordinates([geometryCenter.getCoordinates()[0]-5000, geometryCenter.getCoordinates()[1]])
								
								var tranPoint = geometryCenter.transform("EPSG:5179", "EPSG:4326");
								var center = tranPoint.flatCoordinates;
								center.push(20000);	// 고도 추가(zoom 역할)
									
								dtmap.setCenter(center);
							}
							
							
						}else{
							
							console.log(dtmap.mod);
							
							if(dtmap.mod == '2D'){
								console.log("2D");
								
								//중심점 이동 및 zoom 설정
					            var options = {
					            		//zoom : 11	
					            		zoom : 13	
					            }
								
								dtmap.setCenter(
									[geometryCenter.getCoordinates()[0]-19500, geometryCenter.getCoordinates()[1]]
									, options
								);
								
							}else if(dtmap.mod == '3D'){
								console.log("3D");
								
								geometryCenter.setCoordinates([geometryCenter.getCoordinates()[0]-19500, geometryCenter.getCoordinates()[1]])
								
								var tranPoint = geometryCenter.transform("EPSG:5179", "EPSG:4326");
								console.log(tranPoint);
								
								var center = tranPoint.flatCoordinates;
								center.push(70000);	// 고도 추가(zoom 역할)
								console.log(center);
									
								dtmap.setCenter(center);
							}
							
						} 
						
					}
					
					//console.log(liList);
					//console.log(gridList);
					
					/* dtmap.clear();
					
					for(var i=0; i<liList.length; i++){
						var liCd = liList[i].liCd;
						var geom = liList[i].geom;
						
						var style1 = { 
							fill: {
			                	//color: 'rgba(46,161,255,0.68)'
			                	color: 'rgba(46,161,255,0.88)'
			                },
			                stroke: {
			                    //color: '#89dfff',
			                    //color: '#FF3333',
			                    color: '#FFFFFF',
			                    width: 1
			                },
						}
						
						const formatWKT = new ol.format.WKT();
						let geometry1 = formatWKT.readGeometry(geom);
						
						
						dtmap.vector.addPolygon({
							  id: liCd,
							  coordinates: geometry1.getCoordinates(),
							  //crs: 'EPSG:4326',
							  crs: 'EPSG:5179',
							  style: style1 //스타일 옵션 (벡터 스타일옵션 참고)
						}); 
						
					} 
					
					if(gridList){
						for(var i=0; i<gridList.length; i++){ 
							var gridId = gridList[i].gridId;
							var geom = gridList[i].geom;
							
							var style2 = { 
								fill: {
				                	//color: 'rgba(46,161,255,0.68)'
				                	color: 'rgba(255,255,0,0.68)'
				                },
				                stroke: {
				                    //color: '#89dfff',
				                    //color: '#FF3333',
				                    color: '#FFFFFF',
				                    width: 1
				                },
							}
							
							const formatWKT = new ol.format.WKT();
							let geometry2 = formatWKT.readGeometry(geom);

							if(dtmap.mod == "2D"){
								console.log("2D--->");								
								console.log(geometry2.getCoordinates());								
								
								dtmap.vector.addPolygon({
									  id: gridId,
									  coordinates: geometry2.getCoordinates(),
									  //crs: 'EPSG:4326',
									  crs: 'EPSG:5179',
									  style: style2 //스타일 옵션 (벡터 스타일옵션 참고)
								}); 
								
							}else if(dtmap.mod == "3D"){
								console.log("3D--->");								
								console.log(geometry2.getCoordinates());
								
								dtmap.vector.addPolygon({
									  //id: gridId,
									  coordinates: geometry2.getCoordinates(),
									  crs: 'EPSG:5179',
									  style: style2 //스타일 옵션 (벡터 스타일옵션 참고)
								}); 
							}
						}
					} */
					
					///////////////////
					
					var emdCd = $("#trvaSearchForm select[name=searchArea]").val();
					
					var dCql = ""; 
					if(emdCd){
						dCql = "emd_cd like '"+emdCd+"%'";
					}
					//console.log(dCql);
					dtmap.layer.clear();	
					//dtmap.layer.removeLayer('layer_trva_emd_area');
					
					dtmap.showLayer({
		                    id: 'layer_trva_emd_area',
		                    type: 'WMS',
		                    layerNm: 'digitaltwin:tgd_scco_emd',
		                    title: 'test',
		                    visible: true,
		                    shpType: 6,
		                    cql : "emd_cd like '"+emdCd+"%'",
		                    //sldBody: findLayer.styleInfo
		            });
		
				}else{
					toastr.error("관리자에게 문의 바랍니다.", "정보를 불러오지 못했습니다.");
					return;
				}
			}, complete : function(){
				ui.loadingBar("hide");
			}
		});
				 
		ui.loadingBar("show");
		 
		var emdCd = $("#trvaSearchForm select[name=searchArea]").val();
		
		var dCql = ""; 
		if(emdCd){
			dCql = "emd_cd like '"+emdCd+"%'";
		}
		
		console.log(dCql);
		dtmap.layer.clear();	
		
		/* dtmap.showLayer({
                id: 'layer_trva_emd_area',
                type: 'WMS',
                layerNm: 'digitaltwin:tgd_scco_emd',
                title: 'test',
                visible: true,
                shpType: 6,
                cql : "emd_cd like '"+emdCd+"%'",
                //sldBody: findLayer.styleInfo
        }); */
        
        const geomOptions = {
        		typeNames: 'tgd_scco_emd',
        		sortBy : 'gid',
        		sortOrder : 'DESC',
        		cql : dCql
       	}
       	
       	// 전체(읍면동) geometry 값 가져오는 wfs 
       	const promiseGeo = dtmap.wfsGetFeature(geomOptions);
       	promiseGeo.then(function(data) {
       		console.log(data);
       		var geoArry = dtmap.util.readGeoJson(data);
       		var d = setEmdCd(geoArry);
       		console.log("d>>>");
       		console.log(d);
       		
       		function setEmdCd(geoArry) {
       			let geoInfo = [];
       			let optionText = '';
       			
       			// geoArry[i].values_.emd_cd => 읍면동 코드. 
       			for (let i = 0; i < geoArry.length; i++) {
       				const info = {emdCd : geoArry[i].values_.emd_cd, geometry : geoArry[i].values_.geometry};
       				geoInfo.push(info);
       			}
       			
       			return geoInfo;
           	}
       		
       		var options = {
   				typeNames	: "tgd_bus_route_info" + "",
   				sortBy		: 'route_id',
   				sortOrder	: 'DESC'
   			};
       		
       		
       		var options2 = {
   		        typeNames	: 'tgd_bus_sttn_info' + "",
   		        sortBy		: 'sttn_id',
   		        sortOrder	: 'DESC',
   		    };
   			
       		if(emdCd){
       			console.log(emdCd);
       			emdCd += "0";
       			let geo = findEmdCd(d, emdCd);
       			if (geo != null) {
       				console.log("geo");
       				console.log(geo);
       			    options.geometry = geo;
       			    options2.geometry = geo;
       			}
       		}
   			
   			function findEmdCd(geom, emdCd) {
   			    for (let i = 0; i < geom.length; i++) {
   			    	if (geom[i].emdCd == emdCd) {
   			    		return geom[i].geometry;
   			    	} 
   			    }
   			}
       		
   			// 지도 아이콘 작업
	    	dtmap.vector.clear();
   		
   			const promise = dtmap.wfsGetFeature(options);
   			promise.then(function(data2) {
   				console.log(data2);
   	            // 지도에 GeoJSON 추가
   	            dtmap.vector.readGeoJson(data2, function(feature) {
	   	          // 스타일 콜백 
	   	 			let properties = feature.getProperties();
	   	 			let route_ty = properties['route_ty'];
	   	 			let route_nm_color;
	   	 			
	   	 			// 색상 확인 필요
	   	 			if (route_ty == 11) {				// 직행좌석형시내버스: bus_gg-03_ico
	   	 				route_nm_color = '#e60012';
	   	 			} else if (route_ty == 12) {		// 좌석형시내버스: bus_gg-02_ico
	   	 				route_nm_color = '#0068b7';
	   	 			} else if (route_ty == 13) {		// 일반형시내버스: bus_gg-01_ico
	   	 				route_nm_color = '#33CC99';
	   	 			} else if (route_ty == 14) {		// 광역급행형시내버스: bus_gg-01_ico -> 일반형시내버스(일반좌석버스)
	   	 				route_nm_color = '#006896';
	   	 			} else if (route_ty == 15) {		// 따복형시내버스: bus_gg-06_ico
	   	 				route_nm_color = '#bb2266';
	   	 			} else if (route_ty == 16) {		// 경기순환버스: bus_gg-03_ico
	   	 				route_nm_color = '#e60012';
	   	 			} else if (route_ty == 21) {		// 직행좌석형농어촌버스: bus_gg-01_ico
	   	 				route_nm_color = '#33CC99';
	   	 			} else if (route_ty == 22) {		// 좌석형농어촌버스: bus_gg-01_ico
	   	 				route_nm_color = '#33CC99';
	   	 			} else if (route_ty == 23) {		// 일반형농어촌버스: bus_gg-01_ico
	   	 				route_nm_color = '#33CC99';
	   	 			} else if (route_ty == 30) {		// 마을버스: bus_gg-08_ico
	   	 				route_nm_color = '#ffc600';
	   	 			} else if (route_ty == 41) {		// 고속형시외버스: bus_gg-06_ico -> 따복버스
	   	 				route_nm_color = '#a800ff';
	   	 			} else if (route_ty == 42) {		// 좌석형시외버스: bus_gg-06_ico -> 따복버스
	   	 				route_nm_color = '#a800ff';
	   	 			} else if (route_ty == 43) {		// 일반형시외버스: bus_gg-06_ico -> 따복버스
	   	 				route_nm_color = '#a800ff';
	   	 			} else if (route_ty == 51) {		// 리무진공항버스: bus_gg-05_ico -> 굿모닝글자버스
	   	 				route_nm_color = '#00a0e9';
	   	 			} else if (route_ty == 52) {		// 좌석형공항버스: bus_gg-05_ico -> 굿모닝글자버스
	   	 				route_nm_color = '#00a0e9';
	   	 			} else if (route_ty == 53) {		// 일반형공항버스: bus_gg-05_ico -> 굿모닝글자버스
	   	 				route_nm_color = '#00a0e9';
	   	 			} else {
	   	 				route_nm_color = '#44516A';
	   	 			}
	
	   	 			return {
	   	 				stroke: {
	   	 					color: route_nm_color,
	   	 					width: 4
	   	 				},
	   	 				radius: 10,
	   	 				label: {
	   	 					//column: 'route_nm'
	   	 				}
	   	 			}
   	            	
   	            });
   			});
   			
   			
   			const promise2 = dtmap.wfsGetFeature(options2);
   			promise2.then(function(data3) {
   				console.log(data3);
   	            // 지도에 GeoJSON 추가
   	            dtmap.vector.readGeoJson(data3);
   	            /* dtmap.vector.readGeoJson(data3, function(feature) {
   	            	
   	            	return {
	   	                 marker: {
	   	                     src: '/images/map/busSt_01_ico.png'
	   	                 },
	   	                 label: {
	   	                 	//column: 'sttn_nm'
	   	                 }
   	             	}
   	            	
				}); */
   	            
   			});
       		
        });
       	
        //let xmlString = setLegalStyle(style);
        //options.sld = xmlString;
        //getLayer(options, viewType);
                
		dtmap.showLayer({
                id: 'layer_trva_grid_area',
                type: 'WMS',
                layerNm: 'digitaltwin:tgd_grid_popltn_info',
                title: 'test',
                visible: true,
                shpType: 6,
                cql : "li_cd like '"+emdCd+"%'",
                //sldBody: findLayer.styleInfo
        });
		
		ui.loadingBar("hide");
		
		/////////////////////////////////////////
		var result =
			[
				{areaNm : '양평읍', areaRelImp : 0.12 , pplRelImp : 0.02 , vulnerRank : 9 },
				{areaNm : '강상면', areaRelImp : 4.28 , pplRelImp : 0.14 , vulnerRank : 4 },
				{areaNm : '강하면', areaRelImp : 2.25 , pplRelImp : 0.08 , vulnerRank : 7 },
				{areaNm : '양서면', areaRelImp : 0.85 , pplRelImp : 0.09 , vulnerRank : 8 },
				{areaNm : '옥천면', areaRelImp : 6.38 , pplRelImp : 0.13 , vulnerRank : 3 },
				{areaNm : '서종면', areaRelImp : 2.80 , pplRelImp : 0.09 , vulnerRank : 6 },
				{areaNm : '단월면', areaRelImp : 8.04 , pplRelImp : 0.07 , vulnerRank : 2 },
				{areaNm : '청운면', areaRelImp : 9.40 , pplRelImp : 0.34 , vulnerRank : 1 },
				{areaNm : '양동면', areaRelImp : 3.35 , pplRelImp : 0.20 , vulnerRank : 5 },
				/* {areaNm : '지평면', areaRelImp : 154 , pplRelImp : 0.02 , vulnerRank : 9 },
				{areaNm : '용문면', areaRelImp : 362 , pplRelImp : 0.02 , vulnerRank : 9 },
				{areaNm : '개군면', areaRelImp : 166 , pplRelImp : 0.02 , vulnerRank : 9 } */
		];
		
				
		//리스트 갱신
		var trvaListHml = "";
		for(var i=0; i<result.length; i++){
						
			trvaListHml +=	"<tr>";
			trvaListHml +=	"<td>"+result[i].areaNm+"</td>";
			trvaListHml +=	"<td>"+result[i].areaRelImp+"</td>";
			trvaListHml +=	"<td>"+result[i].pplRelImp+"</td>";
			trvaListHml +=	"<td>"+result[i].vulnerRank+"</td>";
			trvaListHml +=	"</tr>";
			
    	}
		
		$("#trvaInfoList").html(trvaListHml);
		
	}

</script>
<!-- 교통분석 - 대중교통 취약분석 -->
	<form name="trvaSearchForm" id="trvaSearchForm" method="post">

	<div class="popup-header">대중교통 취약분석</div>
	<div class="popup-body">
		<div class="left-popup-body">	
			<div class="srch-box">
				<div class="srch-default">
					<table class="srch-tbl">
						<colgroup>
							<col style="width: 25%;">
							<col style="width: auto;">
						</colgroup>
						<tbody>
                           <tr>
                              <th scope="row">대상 지역</th>
                               <td>
                                   <select name="searchArea" class="form-select w-auto" style="width: 100%;">
                                       <option value="" selected="selected">전체</option>
                                   </select>
                               </td> 
                           </tr>
                           <tr>
                              <th scope="row">자료 유형</th>
                               <td>
                                   <select name="gender" class="form-select w-auto" style="width: 100%;">
                                       <option value="all" selected="selected">총인구</option>
                                       <option value="m">남자</option>
                                       <option value="w">여자</option>
                                   </select>
                               </td> 
                           </tr>										
                           <tr>
                              <th scope="row">기준 연월</th>
                               <td>
                                   <select name="stdrYm" class="form-select w-auto" style="width: 100%;">
                                   </select>
                               </td> 
                           </tr>										
						</tbody>
					</table>
				</div>
				<div class="btn-wrap">
                    <div>
                        <button type="button" class="btn type01 search" onclick="selectTransVulnerList();">조회</button>
                    </div>
                </div>
				
			</div>
			
			<div>
				<!-- <div class="btn-wrap justify-content-between">
					<div class="bbs-list-num">조회결과 : <strong></strong>건</div>
				</div> -->
		
				<div class="bbs-default">
					<div class="bbs-list-head">
	                    <table class="bbs-list">
	                        <colgroup>
	                            <col style="width: 25%;">
	                            <col style="width: 25%;">
	                            <col style="width: 25%;">
	                            <col style="width: auto;">
	                        </colgroup>
	                        <thead>
		                        <tr>
		                            <th scope="col">지역</th>
		                            <th scope="col">면적비중</th>
		                            <th scope="col">인구비중</th>
		                            <th scope="col">취약지랭킹</th>
		                        </tr>
	                        </thead>
	                    </table>
	                </div>
					<div class="scroll-y" >
						<table class="bbs-list">
		                     <colgroup>
		                         <col style="width: 25%;">
		                         <col style="width: 25%;">
		                         <col style="width: 25%;">
		                         <col style="width: auto;">
		                     </colgroup>
	                     <tbody id="trvaInfoList">
		                     
	                     <%-- <c:forEach items="${resultList}" var="cpList" varStatus="status">
	                         <tr name="tdCwpDtl" id="tdCwpDtl" data-cpi='<c:out value="${cpList.cntrkPlnId}" />'
	                             data-lon='<c:out value="${cpList.lon}" />'
	                             data-lat='<c:out value="${cpList.lat}" />'>
	                              
	                             <c:forEach items="${codeList}" var="codeList" varStatus="status">
	                                 <c:if test="${cpList.cntrkTy eq codeList.codeId}">
	                                     <td><c:out value="${codeList.codeIdNm}"></c:out></td>
	                                 </c:if>
	                             </c:forEach>
	                             <td><c:out value="${cpList.chpsnPsitn}"></c:out></td>
	                             <td><c:out value="${cpList.plnYear}"></c:out>년 <c:out
	                                     value="${cpList.plnQu}"></c:out></td>
	                             <td><c:out value="${cpList.cntrkNm}"></c:out></td>
	                         </tr>
	                     </c:forEach>
	                     <c:if test="${fn:length(resultList) == 0}">
	                         <tr>
	                             <td colspan="4">데이터가 없습니다.</td>
	                         </tr>
	                     </c:if> --%>
	                     </tbody>
	                 </table>
					</div>
				</div>
				
				<div class="trvaInfoLegend">
					<div class="regendLevel-type1">
						<h4>
							취약 분석<small>(2022년 기준)</small>
						</h4>
						<ol>
							<li>
								<span class="rg lv01"></span>
								<label>
									<input type="text" value="0.00" readonly>-
									<input type="text" value="0.00" readonly>
								</label>
							</li>
							<li>
								<span class="rg lv02"></span>
								<label>
									<input type="text" value="0.00" readonly>-
									<input type="text" value="23.00" readonly>
								</label>
							</li>
							<li>
								<span class="rg lv03"></span>
								<label>
									<input type="text" value="23.00" readonly>-
									<input type="text" value="77.00" readonly>
								</label>
							</li>
							<li>
								<span class="rg lv04"></span>
								<label>
									<input type="text" value="77.00" readonly>-
									<input type="text" value="287.00" readonly>
								</label>
							</li>
							<li>
								<span class="rg lv05"></span>
								<label>
									<input type="text" value="287.00" readonly>-
									<input type="text" value="1479.00" readonly>
								</label>
							</li>
							<!-- Lv 6-10 추가사용 시
							<li>
								<span class="rg lv06"></span>
								<label>
									<input type="text" value="287.00" readonly>-
									<input type="text" value="1479.00" readonly>
								</label>
							</li>
							<li>
								<span class="rg lv07"></span>
								<label>
									<input type="text" value="287.00" readonly>-
									<input type="text" value="1479.00" readonly>
								</label>
							</li>
							<li>
								<span class="rg lv08"></span>
								<label>
									<input type="text" value="287.00" readonly>-
									<input type="text" value="1479.00" readonly>
								</label>
							</li>
							<li>
								<span class="rg lv09"></span>
								<label>
									<input type="text" value="287.00" readonly>-
									<input type="text" value="1479.00" readonly>
								</label>
							</li>
							<li>
								<span class="rg lv10"></span>
								<label>
									<input type="text" value="287.00" readonly>-
									<input type="text" value="1479.00" readonly>
								</label>
							</li>  -->
						</ol>
					</div>
				</div>
				
			</div>
		</div>
		
	</div>
	
	</form>
	
	<button type="button" class="manualBtn" title="도움말" onclick="manualTab('대중교통취약분석')"></button>
	<button type="button" class="popup-close" id="tranCloseBtn" title="닫기"></button>
	<button type="button" class="popup-reset" class="초기화" id="fcrmResetBtn"></button>
	<button type="button" class="popup-bottom-toggle" title="접기"></button>				
<!-- 교통분석 - 대중교통 취약분석 end -->

